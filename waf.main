#!/bin/bash
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2020 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# script alias to the waf engine script

set_prefix() {
    local this=$(readlink -n -f "$1")
    prefix=$(dirname "${this}")
}

set_prefix "${0}"

waf_main()
{
    # source the environment only if DEVTOOLS_COMPUTER_ID is not already defined
    printf "checking environment... "
    if [ -z "${DEVTOOLS_COMPUTER_ID}" ]; then
        host=$(detect_host)
        if [ ! -z "${host}" ]; then
            export WAFBUILD_ENV="${prefix}/env.d/${host}_${WAF_SUFFIX}.sh"
            if [ -e ${WAFBUILD_ENV} ]; then
                . ${WAFBUILD_ENV}
                echo "loading ${WAFBUILD_ENV}"
            else
                unset WAFBUILD_ENV
                echo "no found"
            fi
        fi
    else
        if [ -z "${WAFBUILD_ENV}" ]; then
            export WAFBUILD_ENV="${prefix}/env.d/${DEVTOOLS_COMPUTER_ID}_${WAF_SUFFIX}.sh"
        fi
        if [ -e ${WAFBUILD_ENV} ]; then
            echo "already set: ${WAFBUILD_ENV}"
        else
            echo "no found: ${WAFBUILD_ENV}"
            unset WAFBUILD_ENV
        fi
    fi

    # really execute waf
    engine=$(echo ${0} | sed -e 's/\main$/engine/g')
    echo "executing: ${engine} ${@}"
    ${engine} "${@}"
    return $?
}

# detect for supported host for automatic configuration
detect_host()
{
    if [ -f /projets/simumeca/eole ]; then
        printf eole
    elif [ -f /projets/simumeca/gaia ]; then
        printf gaia
    elif egrep -q "Calibre 9|Debian GNU/Linux 8" /etc/issue; then
        printf calibre9
    elif egrep -q "Scibian 9.0" /etc/issue; then
        printf scibian9
    elif [ -f /home/aster/clap0f0q ]; then
        printf clap0f0q
    elif [ ! -z "${SINGULARITY_NAME}" ]; then
        if egrep -q "Ubuntu" /etc/issue; then
            printf singularity_ubuntu
        fi
    fi
    printf ""
}


waf_main "${@}"
exit $?
