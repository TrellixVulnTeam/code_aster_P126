# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2020 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------
#
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='NON'))
# SDVERI='NON' car la verification est trop couteuse en CPU
import numpy as NU

mail=LIRE_MAILLAGE(UNITE=20,FORMAT='ASTER')

modele=AFFE_MODELE(MAILLAGE=mail,
    AFFE=_F(GROUP_MA=('GAC','RESSORT'), PHENOMENE='MECANIQUE', MODELISATION='DIS_T'),
)

Pesanteur = 10.0
Raidxyz   = 2.0
Masse     = 15.0
#
Kress     = 500.0
Tfin      = 10.0
#
carael=AFFE_CARA_ELEM(
    MODELE=modele,
    DISCRET=(
        _F(GROUP_MA = 'RESSORT', REPERE='LOCAL',
           CARA     = 'K_T_D_L', VALE = (Kress, Kress, Kress,),),
        _F(GROUP_MA = 'RESSORT', CARA = 'M_T_D_L',  VALE = (0.0,),),
        _F(GROUP_MA = 'RESSORT', CARA = 'A_T_D_L',  VALE = (0.0, 0.0, 0.0), ),

        _F(GROUP_MA = 'GAC',     REPERE='LOCAL',
           CARA     = 'K_T_D_L', VALE = (Raidxyz, Raidxyz, Raidxyz,),),
        _F(GROUP_MA = 'GAC', CARA = 'M_T_D_L',  VALE = (Masse,),),
        _F(GROUP_MA = 'GAC', CARA = 'A_T_D_L',  VALE = (0.0, 0.0, 0.0), ),
   ),
)
charge=AFFE_CHAR_MECA(MODELE=modele,
    PESANTEUR=_F(GROUP_MA = 'GAC',GRAVITE=Pesanteur,DIRECTION=(1.0,0.0,0.0),),
    DDL_IMPO=(
        _F(GROUP_NO='PT2', DX=0.0, DY=0.0, DZ=0.0,),
        _F(GROUP_NO='PT3', DY=0.0, DZ=0.0,),
    ),
)
FDeplT = FORMULE(
    VALE='0.25*sin(2.0*pi*INST)+0.10*sin(2.0*pi*1.5*INST)+0.10*sin(2.0*pi*3.0*INST)',
    NOM_PARA='INST',
)
pas = 1.0/(4.0*10.0)
lsignal= DEFI_LIST_REEL(DEBUT=0.0,
    INTERVALLE=(
        _F(JUSQU_A = Tfin, PAS   = pas),
    ),
)
DeplT  = CALC_FONC_INTERP(
    FONCTION=FDeplT, LIST_PARA=lsignal,
    NOM_PARA='INST',PROL_GAUCHE='CONSTANT',
    PROL_DROITE='CONSTANT', INTERPOL='LIN',
)
CLdepl=AFFE_CHAR_MECA_F(MODELE=modele,
    DDL_IMPO=(
        _F(GROUP_NO='PT3', DX=DeplT,),
    ),
)
#
ldepla = NU.array( [0.00, 2.00, 5.00, 7.000, 9.500, 13.000, 16.000, 200.000,] )/10.0
lforce = NU.array( [4.00, 4.00, 4.50, 4.000, 3.750,  3.500,  3.000,   3.000,] )*100.0
# Raideur variable
lraide = NU.array( [2.00, 2.00, 1.80, 1.400, 1.400,  1.350,  1.330,   1.330,] )*1000.0
# Amortissement
lamort = NU.array( [1.00, 1.00, 1.00, 0.800, 0.800,  0.700,  0.600,   0.600,] )*2.0

fctfx=DEFI_FONCTION(NOM_PARA='DX', ABSCISSE=ldepla, ORDONNEE=lforce,)
fctrd=DEFI_FONCTION(NOM_PARA='DX', ABSCISSE=ldepla, ORDONNEE=lraide,)
fctam=DEFI_FONCTION(NOM_PARA='DX', ABSCISSE=ldepla, ORDONNEE=lamort,)

grilleac=DEFI_MATERIAU(INFO=2,
    DIS_CHOC_ENDO=_F(
        FX       = fctfx, RIGI_NOR = fctrd, AMOR_NOR = fctam,
        DIST_1   = 0.0, DIST_2   = 0.0,
        CRIT_AMOR = 'EXCLUS',
    ),
)

chmat=AFFE_MATERIAU(MAILLAGE=mail,
    AFFE=_F(GROUP_MA = 'GAC',  MATER = grilleac),
)
#
# --------------------------------------------------------------------
pas1 = 0.005
l_inst1=DEFI_LIST_REEL(DEBUT=0.0,
    INTERVALLE=(
        _F(JUSQU_A = Tfin, PAS   = pas1),
    ),
)

resu1=DYNA_NON_LINE(
    MODELE      = modele,
    CHAM_MATER  = chmat,
    CARA_ELEM   = carael,
    EXCIT=(
        _F(CHARGE=charge,),
        _F(CHARGE=CLdepl,),
    ),
    COMPORTEMENT=(
        _F(GROUP_MA='GAC',RELATION='CHOC_ENDO',),
    ),
    INCREMENT=_F(LIST_INST=l_inst1,),
    SCHEMA_TEMPS=_F(SCHEMA='NEWMARK', FORMULATION='DEPLACEMENT'),
    CONVERGENCE=_F(RESI_REFE_RELA=5.0E-02, EFFORT_REFE=1.0),
    NEWTON=_F(REAC_INCR=1, MATRICE='TANGENTE', REAC_ITER=1,),
    ARCHIVAGE=_F(LIST_INST=l_inst1),
)

# --------------------------------------------------------------------
pas2 = 0.010
l_inst2=DEFI_LIST_REEL(DEBUT=0.0,
    INTERVALLE=(
        _F(JUSQU_A = Tfin, PAS   = pas2),
    ),
)

resu2=DYNA_NON_LINE(
    MODELE      = modele,
    CHAM_MATER  = chmat,
    CARA_ELEM   = carael,
    EXCIT=(
        _F(CHARGE=charge,),
        _F(CHARGE=CLdepl,),
    ),
    COMPORTEMENT=(
        _F(GROUP_MA='GAC',RELATION='CHOC_ENDO',),
    ),
    INCREMENT=_F(LIST_INST=l_inst2,),
    SCHEMA_TEMPS=_F(SCHEMA='NEWMARK', FORMULATION='DEPLACEMENT'),
    CONVERGENCE=_F(RESI_REFE_RELA=5.0E-02, EFFORT_REFE=1.0),
    NEWTON=_F(REAC_INCR=1, MATRICE='TANGENTE', REAC_ITER=1,),
    ARCHIVAGE=_F(LIST_INST=l_inst2),
)
#
DEPL11=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT1',)
FORC_1=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='SIEF_ELGA', NOM_CMP='N', MAILLE='M1',POINT=1)
PCUM_1=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='VARI_ELGA', NOM_CMP='V1',MAILLE='M1',POINT=1)
#
DEPL12=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT1',)
FORC_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='SIEF_ELGA', NOM_CMP='N', MAILLE='M1',POINT=1)
PCUM_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V1',MAILLE='M1',POINT=1)
#
# INST             DEPL              FORC              PCUM
Resultat1 = [
 1.1000000000E-01, 8.6804086791E-02, 0.0000000000E+00, 0.0000000000E+00,
 1.4000000000E-01, 1.4622888577E-01,-9.3095792503E+01, 0.0000000000E+00,
 2.0000000000E-01, 2.8097327013E-01,-3.6233269257E+02, 0.0000000000E+00,
 2.1000000000E-01, 3.0077983541E-01,-4.0020756922E+02, 6.5448525354E-04,
 3.0000000000E-01, 3.8702333101E-01,-4.1432695015E+02, 7.1875870534E-02,
 3.7000000000E-01, 3.2938952603E-01,-3.0519244544E+02, 7.1875870534E-02,
 4.5000000000E-01, 1.8585445430E-01,-2.7157682192E+01, 7.1875870534E-02,
 4.6000000000E-01, 1.6745740815E-01,-5.0626169923E-13, 7.1875870534E-02,
 1.0300000000E+00, 1.7180719463E-01, 0.0000000000E+00, 7.1875870534E-02,
 1.1000000000E+00, 3.3931804834E-01,-3.2448534482E+02, 7.1875870534E-02,
 1.1800000000E+00, 4.2796352416E-01,-4.1941137971E+02, 1.0640770047E-01,
 1.2200000000E+00, 4.0604497060E-01,-3.7960626144E+02, 1.0640770047E-01,
 1.3000000000E+00, 2.5556335784E-01,-9.3838616473E+01, 1.0640770047E-01,
 1.3300000000E+00, 1.8864754296E-01, 0.0000000000E+00, 1.0640770047E-01,
 1.6800000000E+00, 2.1303527644E-01,-1.2618687661E+01, 1.0640770047E-01,
 1.7000000000E+00, 2.2760950432E-01,-4.0278383320E+01, 1.0640770047E-01,
 1.7700000000E+00, 2.5132313685E-01,-8.4437826214E+01, 1.0640770047E-01,
 1.8600000000E+00, 2.0035159047E-01,-3.0576169041E-01, 1.0640770047E-01,
 2.2300000000E+00, 2.0085178221E-01,-3.0576169049E-01, 1.0640770047E-01,
 2.2400000000E+00, 2.2987568150E-01,-4.5396050970E+01, 1.0640770047E-01,
 2.3900000000E+00, 5.1870341609E-01,-4.3529203811E+02, 1.8115447811E-01,
 2.5100000000E+00, 3.2475961050E-01,-8.1214974267E+01, 1.8115447811E-01,
 2.5200000000E+00, 2.9557133464E-01,-2.7247122541E+01, 1.8115447811E-01,
 3.1200000000E+00, 2.7172651985E-01,-5.6829821024E-01, 1.8115447811E-01,
 3.1400000000E+00, 3.6441643185E-01,-1.5499624031E+02, 1.8115447811E-01,
 3.1500000000E+00, 4.0997773411E-01,-2.3928706667E+02, 1.8115447811E-01,
 3.1600000000E+00, 4.5402668010E-01,-3.2062556559E+02, 1.8115447811E-01,
 3.1700000000E+00, 4.9584120183E-01,-3.9767749170E+02, 1.8115447811E-01,
 3.1800000000E+00, 5.3474660286E-01,-4.3834644694E+02, 1.9624012979E-01,
 3.1900000000E+00, 5.7030758132E-01,-4.4413876004E+02, 2.2520169528E-01,
 3.2000000000E+00, 6.0231981785E-01,-4.4875059747E+02, 2.5115151451E-01,
 3.3800000000E+00, 5.5500959183E-01,-1.6466131391E+02, 3.4724487439E-01,
 3.4000000000E+00, 4.9824323908E-01,-7.6126292876E+01, 3.4724487439E-01,
 4.2100000000E+00, 5.1240047452E-01,-1.0184353234E+02, 3.4724487439E-01,
 4.2300000000E+00, 6.0081727445E-01,-2.3964768562E+02, 3.4724487439E-01,
 4.2700000000E+00, 7.5157612858E-01,-4.1002660302E+02, 3.7544572117E-01,
 4.4600000000E+00, 6.8814501393E-01,-1.1997683213E+02, 5.0061564256E-01,
 4.4800000000E+00, 6.1705240720E-01,-2.0972026305E+01, 5.0061564256E-01,
 5.2100000000E+00, 7.3590329674E-01,-1.8883455005E+02, 5.0061564256E-01,
 5.2300000000E+00, 8.4547058842E-01,-3.4121617724E+02, 5.0061564256E-01,
 5.2600000000E+00, 9.8061505226E-01,-3.8001447764E+02, 6.0656573949E-01,
 5.4500000000E+00, 9.2517530869E-01,-7.1921029660E+01, 7.7030019577E-01,
 5.4700000000E+00, 8.5038379543E-01, 0.0000000000E+00, 7.7030019577E-01,
 6.2800000000E+00, 1.0341485398E+00,-2.2661865009E+02, 7.7030019577E-01,
 6.3000000000E+00, 1.1715816917E+00,-3.6472201996E+02, 8.0624966988E-01,
 6.3100000000E+00, 1.2336277241E+00,-3.6033935264E+02, 8.6911427888E-01,
 6.5000000000E+00, 1.3863574036E+00,-7.8846606522E+01, 1.2227786004E+00,
 6.5100000000E+00, 1.3399132142E+00,-1.7202962081E+01, 1.2227786004E+00,
 7.3400000000E+00, 1.5474775258E+00,-2.9943042759E+02, 1.2227786004E+00,
 7.3500000000E+00, 1.6206632555E+00,-3.1173091142E+02, 1.2853858593E+00,
 7.3600000000E+00, 1.6882064398E+00,-3.0058677367E+02, 1.3597607981E+00,
 7.3700000000E+00, 1.7499901672E+00,-2.9839633881E+02, 1.4224731298E+00,
 7.4900000000E+00, 1.9937888981E+00,-2.6040271012E+02, 1.6914025849E+00,
 7.5400000000E+00, 1.8087499162E+00,-1.8059901637E+01, 1.6914025849E+00,
 7.5500000000E+00, 1.7541838577E+00, 0.0000000000E+00, 1.6914025849E+00,
 8.3900000000E+00, 2.0354565230E+00,-2.9870016505E+02, 1.7097807155E+00,
 8.4000000000E+00, 2.1414332277E+00,-2.9870016505E+02, 1.8150964163E+00,
 8.4100000000E+00, 2.2398892591E+00,-2.9870016505E+02, 1.9128563035E+00,
 8.5300000000E+00, 2.7145923865E+00,-2.7331451638E+02, 2.4000241003E+00,
 8.5700000000E+00, 2.5493106908E+00,-5.8215364503E+01, 2.4000241003E+00,
 8.5800000000E+00, 2.4845739613E+00, 0.0000000000E+00, 2.4000241003E+00,
 9.4700000000E+00, 2.7947251434E+00,-2.9813572979E+02, 2.4685844253E+00,
 9.4800000000E+00, 2.8901297045E+00,-2.9813572979E+02, 2.5630992474E+00,
 9.4900000000E+00, 2.9754677658E+00,-2.9813572979E+02, 2.6475107929E+00,
 9.5800000000E+00, 3.2373906888E+00,-2.6795743906E+02, 2.9271139093E+00,
 9.5900000000E+00, 3.2068111672E+00,-2.2871729781E+02, 2.9271139093E+00,
 9.6000000000E+00, 3.1644872537E+00,-1.7381237071E+02, 2.9271139093E+00,
 9.6100000000E+00, 3.1108679393E+00,-1.0382120543E+02, 2.9271139093E+00,
 9.6200000000E+00, 3.0465577861E+00,-1.9530015569E+01, 2.9271139093E+00,
]
Instant = Resultat1[0::4]
Deplace = Resultat1[1::4]
Force   = Resultat1[2::4]
Pcumul  = Resultat1[3::4]
motclef = {}; motclef['VALEUR'] = []
for ii in range(len(Instant)):
    # Pour Force
    if ( abs(Force[ii]) > 1.0 ):
        motclef['VALEUR'].append( _F(FONCTION=FORC_1,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Force[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=FORC_1,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Force[ii], CRITERE= 'ABSOLU',),)
    # Pour Pcumul
    if ( abs(Pcumul[ii]) > 0.001 ):
        motclef['VALEUR'].append( _F(FONCTION=PCUM_1,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Pcumul[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=PCUM_1,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Pcumul[ii], CRITERE= 'ABSOLU',),)
    # Pour Deplace
    if ( abs(Deplace[ii]) > 0.001 ):
        motclef['VALEUR'].append( _F(FONCTION=DEPL11,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Deplace[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=DEPL11,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Deplace[ii], CRITERE= 'ABSOLU',),)
TEST_FONCTION(**motclef)
#
# INST             DEPL              FORC              PCUM
Resultat2 = [
 1.1000000000E-01, 8.6799114482E-02,-1.4032228873E-14, 0.0000000000E+00,
 1.4000000000E-01, 1.4609122827E-01,-9.2824469740E+01, 0.0000000000E+00,
 2.0000000000E-01, 2.8055552676E-01,-3.6150702460E+02, 0.0000000000E+00,
 2.1000000000E-01, 3.0034067224E-01,-4.0013774436E+02, 2.8553506599E-04,
 3.0000000000E-01, 3.8671107827E-01,-4.1439237687E+02, 7.1558697630E-02,
 3.7000000000E-01, 3.2937385365E-01,-3.0581890031E+02, 7.1558697630E-02,
 4.5000000000E-01, 1.8602797962E-01,-2.8125575793E+01, 7.1558697630E-02,
 4.6000000000E-01, 1.6761073273E-01,-6.2172489379E-13, 7.1558697630E-02,
 1.0300000000E+00, 1.7167520924E-01,-2.2574930060E-01, 7.1558697630E-02,
 1.1000000000E+00, 3.3919141520E-01,-3.2490253229E+02, 7.1558697630E-02,
 1.1800000000E+00, 4.2799895994E-01,-4.1941926856E+02, 1.0644074708E-01,
 1.2200000000E+00, 4.0626413510E-01,-3.7993993146E+02, 1.0644074708E-01,
 1.3000000000E+00, 2.5621674020E-01,-9.5014836747E+01, 1.0644074708E-01,
 1.3300000000E+00, 1.8933957833E-01,-7.2475359048E-13, 1.0644074708E-01,
 1.6800000000E+00, 2.1190321577E-01,-1.0411705682E+01, 1.0644074708E-01,
 1.7000000000E+00, 2.2648005212E-01,-3.8083640640E+01, 1.0644074708E-01,
 1.7700000000E+00, 2.5076961959E-01,-8.3310175096E+01, 1.0644074708E-01,
 1.8600000000E+00, 2.0116828396E-01,-3.0621707523E-01, 1.0644074708E-01,
 2.2300000000E+00, 2.0214768186E-01,-3.0621707525E-01, 1.0644074708E-01,
 2.2400000000E+00, 2.3099863270E-01,-4.7481059662E+01, 1.0644074708E-01,
 2.3900000000E+00, 5.1693997509E-01,-4.3497431355E+02, 1.7971160107E-01,
 2.5100000000E+00, 3.2260588838E-01,-7.9952519531E+01, 1.7971160107E-01,
 2.5200000000E+00, 2.9351450508E-01,-2.6127657932E+01, 1.7971160107E-01,
 3.1200000000E+00, 2.7297884911E-01,-5.6983421698E-01, 1.7971160107E-01,
 3.1400000000E+00, 3.6530546350E-01,-1.5940981033E+02, 1.7971160107E-01,
 3.1500000000E+00, 4.1062931322E-01,-2.4330656267E+02, 1.7971160107E-01,
 3.1600000000E+00, 4.5441451017E-01,-3.2420129900E+02, 1.7971160107E-01,
 3.1700000000E+00, 4.9594473654E-01,-4.0076968403E+02, 1.7971160107E-01,
 3.1800000000E+00, 5.3459401478E-01,-4.3831543117E+02, 1.9610868795E-01,
 3.1900000000E+00, 5.6993779192E-01,-4.4407221223E+02, 2.2489259324E-01,
 3.2000000000E+00, 6.0173677077E-01,-4.4888334285E+02, 2.5065113215E-01,
 3.3800000000E+00, 5.5199220232E-01,-1.6309231474E+02, 3.4553428838E-01,
 3.4000000000E+00, 4.9527706023E-01,-7.4393991893E+01, 3.4553428838E-01,
 4.2100000000E+00, 5.1197723773E-01,-1.0413111843E+02, 3.4553428838E-01,
 4.2300000000E+00, 5.9977343936E-01,-2.4132662542E+02, 3.4553428838E-01,
 4.2700000000E+00, 7.4931551003E-01,-4.1057367741E+02, 3.7363029461E-01,
 4.4600000000E+00, 6.8301654955E-01,-1.1932462260E+02, 4.9596295363E-01,
 4.4800000000E+00, 6.1205778686E-01,-2.0500302311E+01, 4.9596295363E-01,
 5.2100000000E+00, 7.3657626933E-01,-1.9625334336E+02, 4.9596295363E-01,
 5.2300000000E+00, 8.4509760191E-01,-3.4715747832E+02, 4.9596295363E-01,
 5.2600000000E+00, 9.7870705156E-01,-3.8019878537E+02, 6.0449351995E-01,
 5.4500000000E+00, 9.1734171314E-01,-6.9231038476E+01, 7.6447513589E-01,
 5.4700000000E+00, 8.4263317864E-01, 0.0000000000E+00, 7.6447513589E-01,
 6.2800000000E+00, 1.0325949702E+00,-2.3265288464E+02, 7.6447513589E-01,
 6.3000000000E+00, 1.1687603150E+00,-3.6491200917E+02, 8.0334274116E-01,
 6.3100000000E+00, 1.2302524890E+00,-3.6056872398E+02, 8.6564245621E-01,
 6.5000000000E+00, 1.3759895295E+00,-7.7668136388E+01, 1.2133714165E+00,
 6.5100000000E+00, 1.3295200818E+00,-1.5960910364E+01, 1.2133714165E+00,
 7.3400000000E+00, 1.5457176957E+00,-3.0974462109E+02, 1.2133714165E+00,
 7.3500000000E+00, 1.6181165485E+00,-3.1217782920E+02, 1.2824730992E+00,
 7.3600000000E+00, 1.6848926785E+00,-3.0116125118E+02, 1.3559967163E+00,
 7.3700000000E+00, 1.7459143675E+00,-2.9839602604E+02, 1.4183294881E+00,
 7.4900000000E+00, 1.9823640279E+00,-2.5862822335E+02, 1.6813347110E+00,
 7.5400000000E+00, 1.7962460955E+00,-1.4812456985E+01, 1.6813347110E+00,
 7.5500000000E+00, 1.7416304525E+00, 0.0000000000E+00, 1.6813347110E+00,
 8.3900000000E+00, 2.0322197155E+00,-2.9869594104E+02, 1.7065138650E+00,
 8.4000000000E+00, 2.1373931202E+00,-2.9869594104E+02, 1.8110274861E+00,
 8.4100000000E+00, 2.2350606323E+00,-2.9869594104E+02, 1.9080003351E+00,
 8.5300000000E+00, 2.7024865157E+00,-2.7221137398E+02, 2.3888076397E+00,
 8.5700000000E+00, 2.5363576322E+00,-5.5955913836E+01, 2.3888076397E+00,
 8.5800000000E+00, 2.4715527165E+00, 0.0000000000E+00, 2.3888076397E+00,
 9.4700000000E+00, 2.7885087574E+00,-2.9813858227E+02, 2.4623451393E+00,
 9.4800000000E+00, 2.8831848345E+00,-2.9813858227E+02, 2.5561333818E+00,
 9.4900000000E+00, 2.9678196076E+00,-2.9813858227E+02, 2.6398440249E+00,
 9.5800000000E+00, 3.2250550943E+00,-2.6697986047E+02, 2.9155778710E+00,
 9.5900000000E+00, 3.1942124341E+00,-2.2738274147E+02, 2.9155778710E+00,
 9.6000000000E+00, 3.1516939978E+00,-1.7221178832E+02, 2.9155778710E+00,
 9.6100000000E+00, 3.0979522755E+00,-1.0205031918E+02, 2.9155778710E+00,
 9.6200000000E+00, 3.0335907128E+00,-1.7683181055E+01, 2.9155778710E+00,
]
Instant = Resultat2[0::4]
Deplace = Resultat2[1::4]
Force   = Resultat2[2::4]
Pcumul  = Resultat2[3::4]
motclef = {}; motclef['VALEUR'] = []
for ii in range(len(Instant)):
    # Pour Force
    if ( abs(Force[ii]) > 1.0 ):
        motclef['VALEUR'].append( _F(FONCTION=FORC_2,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Force[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=FORC_2,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Force[ii], CRITERE= 'ABSOLU',),)
    # Pour Pcumul
    if ( abs(Pcumul[ii]) > 0.001 ):
        motclef['VALEUR'].append( _F(FONCTION=PCUM_2,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Pcumul[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=PCUM_2,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Pcumul[ii], CRITERE= 'ABSOLU',),)
    # Pour Deplace
    if ( abs(Deplace[ii]) > 0.001):
        motclef['VALEUR'].append( _F(FONCTION=DEPL12,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Deplace[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=DEPL12,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Deplace[ii], CRITERE= 'ABSOLU',),)
TEST_FONCTION(**motclef)

"""
# Pour l'impression des courbes
XInstant=DEFI_LIST_REEL(VALE=Instant)
# LIST_PARA=XInstant,
#
UXAN_1=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='VARI_ELGA', NOM_CMP='V2',MAILLE='M1',POINT=1)
DEPL31=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT3',)
VITE_1=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V3',MAILLE='M1',POINT=1)
#
UXAN_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V2',MAILLE='M1',POINT=1)
DEPL32=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT3',)
VITE_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V3',MAILLE='M1',POINT=1)
#
fic_courbe = './REPE_OUT/sdnd109d_filtre_%04d.dat' % (int(pas1*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL11, LIST_PARA=XInstant,),
        _F(FONCTION=FORC_1, LIST_PARA=XInstant,),
        _F(FONCTION=PCUM_1, LIST_PARA=XInstant,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
DETRUIRE(INFO=1, CONCEPT=( _F(NOM=unite,), ),)
#
fic_courbe = './REPE_OUT/sdnd109d_filtre_%04d.dat' % (int(pas2*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL12, LIST_PARA=XInstant,),
        _F(FONCTION=FORC_2, LIST_PARA=XInstant,),
        _F(FONCTION=PCUM_2, LIST_PARA=XInstant,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
DETRUIRE(INFO=1, CONCEPT=( _F(NOM=unite,), ),)

fic_courbe = './REPE_OUT/sdnd109d_%04d.dat' % (int(pas1*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL11,),
        _F(FONCTION=FORC_1,),
        _F(FONCTION=PCUM_1,),
        _F(FONCTION=VITE_1,),
        _F(FONCTION=UXAN_1,),
        _F(FONCTION=DEPL31,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
DETRUIRE(INFO=1, CONCEPT=( _F(NOM=unite,), ),)
#
fic_courbe = './REPE_OUT/sdnd109d_%04d.dat' % (int(pas2*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL12,),
        _F(FONCTION=FORC_2,),
        _F(FONCTION=PCUM_2,),
        _F(FONCTION=VITE_2,),
        _F(FONCTION=UXAN_2,),
        _F(FONCTION=DEPL32,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
DETRUIRE(INFO=1, CONCEPT=( _F(NOM=unite,), ),)
"""
FIN()
