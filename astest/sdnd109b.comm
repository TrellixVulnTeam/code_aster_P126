# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2020 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------
#
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='NON'))
# SDVERI='NON' car la verification est trop couteuse en CPU
import numpy as NU

mail=LIRE_MAILLAGE(UNITE=20,FORMAT='ASTER')

modele=AFFE_MODELE(MAILLAGE=mail,
    AFFE=_F(GROUP_MA=('GAC','RESSORT'), PHENOMENE='MECANIQUE', MODELISATION='DIS_T'),
)

Pesanteur = 10.0
Raidxyz   = 2.0
Masse     = 15.0
#
Kress     = 500.0
Tfin      = 10.0
#
carael=AFFE_CARA_ELEM(
    MODELE=modele,
    DISCRET=(
        _F(GROUP_MA = 'RESSORT', REPERE='LOCAL',
           CARA     = 'K_T_D_L', VALE = (Kress, Kress, Kress,),),
        _F(GROUP_MA = 'RESSORT', CARA = 'M_T_D_L',  VALE = (0.0,),),
        _F(GROUP_MA = 'RESSORT', CARA = 'A_T_D_L',  VALE = (0.0, 0.0, 0.0), ),

        _F(GROUP_MA = 'GAC',     REPERE='LOCAL',
           CARA     = 'K_T_D_L', VALE = (Raidxyz, Raidxyz, Raidxyz,),),
        _F(GROUP_MA = 'GAC', CARA = 'M_T_D_L',  VALE = (Masse,),),
        _F(GROUP_MA = 'GAC', CARA = 'A_T_D_L',  VALE = (0.0, 0.0, 0.0), ),
   ),
)
charge=AFFE_CHAR_MECA(MODELE=modele,
    PESANTEUR=_F(GROUP_MA = 'GAC',GRAVITE=Pesanteur,DIRECTION=(1.0,0.0,0.0),),
    DDL_IMPO=(
        _F(GROUP_NO='PT2', DX=0.0, DY=0.0, DZ=0.0,),
        _F(GROUP_NO='PT3', DY=0.0, DZ=0.0,),
    ),
)
FDeplT = FORMULE(
    VALE='0.25*sin(2.0*pi*INST)+0.10*sin(2.0*pi*1.5*INST)+0.10*sin(2.0*pi*3.0*INST)',
    NOM_PARA='INST',
)
pas = 1.0/(4.0*10.0)
lsignal= DEFI_LIST_REEL(DEBUT=0.0,
    INTERVALLE=(
        _F(JUSQU_A = Tfin, PAS   = pas),
    ),
)
DeplT  = CALC_FONC_INTERP(
    FONCTION=FDeplT, LIST_PARA=lsignal,
    NOM_PARA='INST',PROL_GAUCHE='CONSTANT',
    PROL_DROITE='CONSTANT', INTERPOL='LIN',
)
CLdepl=AFFE_CHAR_MECA_F(MODELE=modele,
    DDL_IMPO=(
        _F(GROUP_NO='PT3', DX=DeplT,),
    ),
)
#
ldepla = NU.array( [0.00, 2.00, 5.00, 7.000, 9.500, 13.000, 16.000, 200.000,] )/10.0
lforce = NU.array( [4.00, 4.00, 4.50, 4.000, 3.750,  3.500,  3.000,   3.000,] )*100.0
# Raideur variable
lraide = NU.array( [2.00, 2.00, 1.80, 1.400, 1.400,  1.350,  1.330,   1.330,] )*1000.0
# Amortissement nul
lamort = NU.array( [1.00, 1.00, 1.00, 0.800, 0.800,  0.700,  0.600,   0.600,] )*0.0

fctfx=DEFI_FONCTION(NOM_PARA='DX', ABSCISSE=ldepla, ORDONNEE=lforce,)
fctrd=DEFI_FONCTION(NOM_PARA='DX', ABSCISSE=ldepla, ORDONNEE=lraide,)
fctam=DEFI_FONCTION(NOM_PARA='DX', ABSCISSE=ldepla, ORDONNEE=lamort,)

grilleac=DEFI_MATERIAU(INFO=2,
    DIS_CHOC_ENDO=_F(
        FX       = fctfx, RIGI_NOR = fctrd, AMOR_NOR = fctam,
        DIST_1   = 0.0, DIST_2   = 0.0,
        CRIT_AMOR = 'INCLUS',
    ),
)

chmat=AFFE_MATERIAU(MAILLAGE=mail,
    AFFE=_F(GROUP_MA = 'GAC',  MATER = grilleac),
)
#
# --------------------------------------------------------------------
pas1 = 0.005
l_inst1=DEFI_LIST_REEL(DEBUT=0.0,
    INTERVALLE=(
        _F(JUSQU_A = Tfin, PAS   = pas1),
    ),
)

resu1=DYNA_NON_LINE(
    MODELE      = modele,
    CHAM_MATER  = chmat,
    CARA_ELEM   = carael,
    EXCIT=(
        _F(CHARGE=charge,),
        _F(CHARGE=CLdepl,),
    ),
    COMPORTEMENT=(
        _F(GROUP_MA='GAC',RELATION='CHOC_ENDO',),
    ),
    INCREMENT=_F(LIST_INST=l_inst1,),
    SCHEMA_TEMPS=_F(SCHEMA='NEWMARK', FORMULATION='DEPLACEMENT'),
    CONVERGENCE=_F(RESI_REFE_RELA=5.0E-02, EFFORT_REFE=1.0),
    NEWTON=_F(REAC_INCR=1, MATRICE='TANGENTE', REAC_ITER=1,),
    ARCHIVAGE=_F(LIST_INST=l_inst1),
)

# --------------------------------------------------------------------
pas2 = 0.010
l_inst2=DEFI_LIST_REEL(DEBUT=0.0,
    INTERVALLE=(
        _F(JUSQU_A = Tfin, PAS   = pas2),
    ),
)

resu2=DYNA_NON_LINE(
    MODELE      = modele,
    CHAM_MATER  = chmat,
    CARA_ELEM   = carael,
    EXCIT=(
        _F(CHARGE=charge,),
        _F(CHARGE=CLdepl,),
    ),
    COMPORTEMENT=(
        _F(GROUP_MA='GAC',RELATION='CHOC_ENDO',),
    ),
    INCREMENT=_F(LIST_INST=l_inst2,),
    SCHEMA_TEMPS=_F(SCHEMA='NEWMARK', FORMULATION='DEPLACEMENT'),
    CONVERGENCE=_F(RESI_REFE_RELA=5.0E-02, EFFORT_REFE=1.0),
    NEWTON=_F(REAC_INCR=1, MATRICE='TANGENTE', REAC_ITER=1,),
    ARCHIVAGE=_F(LIST_INST=l_inst2),
)
#
DEPL11=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT1',)
FORC_1=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='SIEF_ELGA', NOM_CMP='N', MAILLE='M1',POINT=1)
PCUM_1=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='VARI_ELGA', NOM_CMP='V1',MAILLE='M1',POINT=1)
#
DEPL12=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT1',)
FORC_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='SIEF_ELGA', NOM_CMP='N', MAILLE='M1',POINT=1)
PCUM_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V1',MAILLE='M1',POINT=1)
#
# INST             DEPL              FORC              PCUM
Resultat1 = [
 1.1000000000E-01, 8.6804086791E-02, 0.0000000000E+00, 0.0000000000E+00,
 1.4000000000E-01, 1.4623320513E-01,-9.2478605109E+01, 0.0000000000E+00,
 2.0000000000E-01, 2.8109617676E-01,-3.6220454837E+02, 0.0000000000E+00,
 2.1000000000E-01, 3.0093325059E-01,-4.0017149359E+02, 7.9032965973E-04,
 3.0000000000E-01, 3.8739477389E-01,-4.1472549571E+02, 7.3736365652E-02,
 3.7000000000E-01, 3.2991549115E-01,-3.0315758096E+02, 7.3736365652E-02,
 4.5000000000E-01, 1.8714971701E-01,-2.6047656137E+01, 7.3736365652E-02,
 4.6000000000E-01, 1.6888407653E-01,-2.1826145513E-02, 7.3736365652E-02,
 1.0300000000E+00, 1.7005882682E-01,-2.1826145512E-02, 7.3736365652E-02,
 1.1000000000E+00, 3.3800197768E-01,-3.1885897562E+02, 7.3736365652E-02,
 1.1800000000E+00, 4.2898285303E-01,-4.2173687946E+02, 1.0855194715E-01,
 1.2200000000E+00, 4.0791574219E-01,-3.8143215850E+02, 1.0855194715E-01,
 1.3000000000E+00, 2.5828622158E-01,-9.5167177917E+01, 1.0855194715E-01,
 1.3300000000E+00, 1.9140603789E-01,-3.4772904335E-02, 1.0855194715E-01,
 1.6800000000E+00, 2.1167988338E-01,-6.0154048603E+00, 1.0855194715E-01,
 1.7000000000E+00, 2.2613069732E-01,-3.3662101553E+01, 1.0855194715E-01,
 1.7700000000E+00, 2.5083570728E-01,-8.0926699925E+01, 1.0855194715E-01,
 1.8600000000E+00, 2.0286635240E-01,-2.5958902070E-02, 1.0855194715E-01,
 2.2300000000E+00, 2.0554578947E-01,-2.5958902179E-02, 1.0855194715E-01,
 2.2400000000E+00, 2.3427419058E-01,-4.9239004268E+01, 1.0855194715E-01,
 2.3900000000E+00, 5.1639881336E-01,-4.3629257169E+02, 1.8121904482E-01,
 2.5100000000E+00, 3.1949542542E-01,-7.1031910922E+01, 1.8121904482E-01,
 2.5200000000E+00, 2.9053408276E-01,-1.7307903077E+01, 1.8121904482E-01,
 3.1200000000E+00, 2.7716096382E-01,-3.7023541351E-02, 1.8121904482E-01,
 3.1400000000E+00, 3.6896118463E-01,-1.6281562002E+02, 1.8121904482E-01,
 3.1500000000E+00, 4.1397531985E-01,-2.4631795558E+02, 1.8121904482E-01,
 3.1600000000E+00, 4.5741689726E-01,-3.2690315749E+02, 1.8121904482E-01,
 3.1700000000E+00, 4.9857088512E-01,-4.0324482409E+02, 1.8121904482E-01,
 3.1800000000E+00, 5.3677572982E-01,-4.3968042494E+02, 1.9804956105E-01,
 3.1900000000E+00, 5.7161706540E-01,-4.4541568189E+02, 2.2672584578E-01,
 3.2000000000E+00, 6.0289705204E-01,-4.4932713017E+02, 2.5246724939E-01,
 3.3800000000E+00, 5.4524633404E-01,-1.5365151085E+02, 3.4702581326E-01,
 3.4000000000E+00, 4.8866757793E-01,-6.5175732036E+01, 3.4702581326E-01,
 4.2100000000E+00, 5.0733054157E-01,-9.4307087436E+01, 3.4702581326E-01,
 4.2300000000E+00, 5.9489031091E-01,-2.3122983580E+02, 3.4702581326E-01,
 4.2700000000E+00, 7.4480799152E-01,-4.1334499849E+02, 3.7046991444E-01,
 4.4600000000E+00, 6.8140010836E-01,-1.1788264307E+02, 4.9720197269E-01,
 4.4800000000E+00, 6.1088386108E-01,-1.9159896893E+01, 4.9720197269E-01,
 5.2100000000E+00, 7.3384594825E-01,-1.9131012574E+02, 4.9720197269E-01,
 5.2300000000E+00, 8.4237512049E-01,-3.4325096688E+02, 4.9720197269E-01,
 5.2600000000E+00, 9.7593455045E-01,-3.8241964854E+02, 6.0278377289E-01,
 5.4500000000E+00, 9.1378532737E-01,-6.5328232094E+01, 7.6673209978E-01,
 5.4700000000E+00, 8.3941859391E-01,-2.2417103893E-02, 7.6673209978E-01,
 6.2800000000E+00, 1.0299059846E+00,-2.2653958433E+02, 7.6673209978E-01,
 6.3000000000E+00, 1.1660716393E+00,-3.6673774130E+02, 8.0099320546E-01,
 6.3100000000E+00, 1.2274965883E+00,-3.6235091094E+02, 8.6391752887E-01,
 6.5000000000E+00, 1.3722384582E+00,-7.2849887626E+01, 1.2178632732E+00,
 6.5100000000E+00, 1.3258779726E+00,-1.0755386834E+01, 1.2178632732E+00,
 7.3400000000E+00, 1.5438584387E+00,-3.0271378172E+02, 1.2178632732E+00,
 7.3500000000E+00, 1.6161721264E+00,-3.1401177664E+02, 1.2810767346E+00,
 7.3600000000E+00, 1.6828426127E+00,-3.0288764222E+02, 1.3553181730E+00,
 7.3700000000E+00, 1.7437576006E+00,-3.0002371821E+02, 1.4181905130E+00,
 7.4900000000E+00, 1.9787278197E+00,-2.5721079962E+02, 1.6853508966E+00,
 7.5400000000E+00, 1.7922648200E+00,-9.2150098985E+00, 1.6853508966E+00,
 7.5500000000E+00, 1.7377096922E+00,-2.9542390056E-02, 1.6853508966E+00,
 8.3900000000E+00, 2.0323788923E+00,-3.0002252692E+02, 1.7068143118E+00,
 8.4000000000E+00, 2.1373367723E+00,-3.0002252692E+02, 1.8117721918E+00,
 8.4100000000E+00, 2.2347788097E+00,-3.0002252692E+02, 1.9092142291E+00,
 8.5300000000E+00, 2.6988926842E+00,-2.7019608812E+02, 2.3957539975E+00,
 8.5700000000E+00, 2.5317336814E+00,-4.7874614473E+01, 2.3957539975E+00,
 8.5800000000E+00, 2.4668114737E+00,-1.7223505175E-02, 2.3957539975E+00,
 9.4700000000E+00, 2.7894447296E+00,-3.0001467904E+02, 2.4638803949E+00,
 9.4800000000E+00, 2.8838297747E+00,-3.0001467904E+02, 2.5582654399E+00,
 9.4900000000E+00, 2.9681567899E+00,-3.0001467904E+02, 2.6425924551E+00,
 9.5800000000E+00, 3.2219227925E+00,-2.6479547158E+02, 2.9228390648E+00,
 9.5900000000E+00, 3.1906459654E+00,-2.2319729154E+02, 2.9228390648E+00,
 9.6000000000E+00, 3.1477153613E+00,-1.6609958812E+02, 2.9228390648E+00,
 9.6100000000E+00, 3.0935965701E+00,-9.4121595767E+01, 2.9228390648E+00,
 9.6200000000E+00, 3.0289090250E+00,-8.0871607611E+00, 2.9228390648E+00,
]
Instant = Resultat1[0::4]
Deplace = Resultat1[1::4]
Force   = Resultat1[2::4]
Pcumul  = Resultat1[3::4]
motclef = {}; motclef['VALEUR'] = []
for ii in range(len(Instant)):
    # Pour Force
    if ( abs(Force[ii]) > 1.0 ):
        motclef['VALEUR'].append( _F(FONCTION=FORC_1,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Force[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=FORC_1,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Force[ii], CRITERE= 'ABSOLU',),)
    # Pour Pcumul
    if ( abs(Pcumul[ii]) > 0.001 ):
        motclef['VALEUR'].append( _F(FONCTION=PCUM_1,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Pcumul[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=PCUM_1,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Pcumul[ii], CRITERE= 'ABSOLU',),)
    # Pour Deplace
    if ( abs(Deplace[ii]) > 0.001 ):
        motclef['VALEUR'].append( _F(FONCTION=DEPL11,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Deplace[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=DEPL11,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Deplace[ii], CRITERE= 'ABSOLU',),)
TEST_FONCTION(**motclef)
#
# INST             DEPL              FORC              PCUM
Resultat2 = [
 1.1000000000E-01, 8.6799114482E-02,-1.3895122385E-14, 0.0000000000E+00,
 1.4000000000E-01, 1.4609621068E-01,-9.2188349155E+01, 0.0000000000E+00,
 2.0000000000E-01, 2.8067943323E-01,-3.6135479426E+02, 0.0000000000E+00,
 2.1000000000E-01, 3.0049537469E-01,-4.0008461746E+02, 4.1760821195E-04,
 3.0000000000E-01, 3.8709283286E-01,-4.1469428289E+02, 7.3465935372E-02,
 3.7000000000E-01, 3.2993146103E-01,-3.0373107015E+02, 7.3465935372E-02,
 4.5000000000E-01, 1.8738361549E-01,-2.7013307724E+01, 7.3465935372E-02,
 4.6000000000E-01, 1.6909948479E-01,-5.9685589804E-13, 7.3465935372E-02,
 1.0300000000E+00, 1.6986009621E-01, 0.0000000000E+00, 7.3465935372E-02,
 1.1000000000E+00, 3.3778057882E-01,-3.1896753263E+02, 7.3465935372E-02,
 1.1800000000E+00, 4.2893945029E-01,-4.2170380992E+02, 1.0851742744E-01,
 1.2200000000E+00, 4.0807021922E-01,-3.8177708799E+02, 1.0851742744E-01,
 1.3000000000E+00, 2.5890019503E-01,-9.6387077437E+01, 1.0851742744E-01,
 1.3300000000E+00, 1.9206291103E-01,-1.4188560510E-03, 1.0851742744E-01,
 1.6800000000E+00, 2.1054282813E-01,-3.8815849074E+00, 1.0851742744E-01,
 1.7000000000E+00, 2.2498821012E-01,-3.1518288329E+01, 1.0851742744E-01,
 1.7700000000E+00, 2.5022931154E-01,-7.9809211659E+01, 1.0851742744E-01,
 1.8600000000E+00, 2.0358592357E-01,-1.3497523304E-02, 1.0851742744E-01,
 2.2300000000E+00, 2.0684728378E-01,-1.3497523322E-02, 1.0851742744E-01,
 2.2400000000E+00, 2.3541161667E-01,-5.1470324670E+01, 1.0851742744E-01,
 2.3900000000E+00, 5.1472774746E-01,-4.3599173042E+02, 1.7984329313E-01,
 2.5100000000E+00, 3.1741941708E-01,-6.9762733579E+01, 1.7984329313E-01,
 2.5200000000E+00, 2.8855048483E-01,-1.6178376168E+01, 1.7984329313E-01,
 3.1200000000E+00, 2.7830493544E-01,-2.1165186956E-02, 1.7984329313E-01,
 3.1400000000E+00, 3.6974890105E-01,-1.6689524034E+02, 1.7984329313E-01,
 3.1500000000E+00, 4.1453917764E-01,-2.5003160884E+02, 1.7984329313E-01,
 3.1600000000E+00, 4.5773304713E-01,-3.3020484563E+02, 1.7984329313E-01,
 3.1700000000E+00, 4.9862095329E-01,-4.0609792540E+02, 1.7984329313E-01,
 3.1800000000E+00, 5.3658917622E-01,-4.3961736008E+02, 1.9789551464E-01,
 3.1900000000E+00, 5.7122998244E-01,-4.4531981600E+02, 2.2640779425E-01,
 3.2000000000E+00, 6.0231435138E-01,-4.4944141371E+02, 2.5196953808E-01,
 3.3800000000E+00, 5.4241785612E-01,-1.5238250918E+02, 3.4525354147E-01,
 3.4000000000E+00, 4.8586621462E-01,-6.3705105407E+01, 3.4525354147E-01,
 4.2100000000E+00, 5.0736483335E-01,-9.7410474931E+01, 3.4525354147E-01,
 4.2300000000E+00, 5.9429571929E-01,-2.3372491371E+02, 3.4525354147E-01,
 4.2700000000E+00, 7.4288852847E-01,-4.1383785185E+02, 3.6891750364E-01,
 4.4600000000E+00, 6.7597636746E-01,-1.1688242544E+02, 4.9250071557E-01,
 4.4800000000E+00, 6.0555809183E-01,-1.8296839568E+01, 4.9250071557E-01,
 5.2100000000E+00, 7.3480947558E-01,-1.9923811506E+02, 4.9250071557E-01,
 5.2300000000E+00, 8.4223151773E-01,-3.4962897408E+02, 4.9250071557E-01,
 5.2600000000E+00, 9.7414361482E-01,-3.8259193399E+02, 6.0086784129E-01,
 5.4500000000E+00, 9.0556413353E-01,-6.2157624465E+01, 7.6081945058E-01,
 5.4700000000E+00, 8.3130089307E-01,-1.6910936445E-02, 7.6081945058E-01,
 6.2800000000E+00, 1.0279797234E+00,-2.3220221715E+02, 7.6081945058E-01,
 6.3000000000E+00, 1.1628487481E+00,-3.6696047065E+02, 7.9769098709E-01,
 6.3100000000E+00, 1.2237123620E+00,-3.6261380711E+02, 8.6003916096E-01,
 6.5000000000E+00, 1.3615190533E+00,-7.1840379164E+01, 1.2079146300E+00,
 6.5100000000E+00, 1.3151415357E+00,-9.6954123615E+00, 1.2079146300E+00,
 7.3400000000E+00, 1.5417833541E+00,-3.1339031976E+02, 1.2079146300E+00,
 7.3500000000E+00, 1.6132926869E+00,-3.1448052367E+02, 1.2778737063E+00,
 7.3600000000E+00, 1.6791776862E+00,-3.0348785732E+02, 1.3512377390E+00,
 7.3700000000E+00, 1.7393129628E+00,-3.0001233277E+02, 1.4137479328E+00,
 7.4900000000E+00, 1.9668290308E+00,-2.5535439639E+02, 1.6748413966E+00,
 7.5400000000E+00, 1.7793201789E+00,-5.9676233808E+00, 1.6748413966E+00,
 7.5500000000E+00, 1.7247299163E+00,-2.9279228801E-03, 1.6748413966E+00,
 8.3900000000E+00, 2.0286252670E+00,-3.0002955719E+02, 1.7030523825E+00,
 8.4000000000E+00, 2.1327557311E+00,-3.0002955719E+02, 1.8071828466E+00,
 8.4100000000E+00, 2.2293869393E+00,-3.0002955719E+02, 1.9038140547E+00,
 8.5300000000E+00, 2.6861122739E+00,-2.6911312105E+02, 2.3837848301E+00,
 8.5700000000E+00, 2.5181362772E+00,-4.5705045356E+01, 2.3837848301E+00,
 8.5800000000E+00, 2.4531427596E+00,-2.7481794396E-02, 2.3837848301E+00,
 9.4700000000E+00, 2.7830916861E+00,-3.0004229161E+02, 2.4575212468E+00,
 9.4800000000E+00, 2.8767033522E+00,-3.0004229161E+02, 2.5511329130E+00,
 9.4900000000E+00, 2.9602826991E+00,-3.0004229161E+02, 2.6347122599E+00,
 9.5800000000E+00, 3.2090073346E+00,-2.6376593938E+02, 2.9107123482E+00,
 9.5900000000E+00, 3.1774368561E+00,-2.2177720292E+02, 2.9107123482E+00,
 9.6000000000E+00, 3.1342837763E+00,-1.6438360680E+02, 2.9107123482E+00,
 9.6100000000E+00, 3.0800174352E+00,-9.2209373183E+01, 2.9107123482E+00,
 9.6200000000E+00, 3.0152563676E+00,-6.0771532450E+00, 2.9107123482E+00,
]
Instant = Resultat2[0::4]
Deplace = Resultat2[1::4]
Force   = Resultat2[2::4]
Pcumul  = Resultat2[3::4]
motclef = {}; motclef['VALEUR'] = []
for ii in range(len(Instant)):
    # Pour Force
    if ( abs(Force[ii]) > 1.0 ):
        motclef['VALEUR'].append( _F(FONCTION=FORC_2,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Force[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=FORC_2,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Force[ii], CRITERE= 'ABSOLU',),)
    # Pour Pcumul
    if ( abs(Pcumul[ii]) > 0.001 ):
        motclef['VALEUR'].append( _F(FONCTION=PCUM_2,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Pcumul[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=PCUM_2,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Pcumul[ii], CRITERE= 'ABSOLU',),)
    # Pour Deplace
    if ( abs(Deplace[ii]) > 0.001):
        motclef['VALEUR'].append( _F(FONCTION=DEPL12,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Deplace[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=DEPL12,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Deplace[ii], CRITERE= 'ABSOLU',),)
TEST_FONCTION(**motclef)
"""
# Pour l'impression des courbes
XInstant=DEFI_LIST_REEL(VALE=Instant)
# LIST_PARA=XInstant,
#
UXAN_1=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='VARI_ELGA', NOM_CMP='V2',MAILLE='M1',POINT=1)
DEPL31=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT3',)
VITE_1=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V3',MAILLE='M1',POINT=1)
#
UXAN_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V2',MAILLE='M1',POINT=1)
DEPL32=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT3',)
VITE_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V3',MAILLE='M1',POINT=1)
#
fic_courbe = './REPE_OUT/sdnd109b_filtre_%04d.dat' % (int(pas1*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL11, LIST_PARA=XInstant,),
        _F(FONCTION=FORC_1, LIST_PARA=XInstant,),
        _F(FONCTION=PCUM_1, LIST_PARA=XInstant,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
DETRUIRE(INFO=1, CONCEPT=( _F(NOM=unite,), ),)
#
fic_courbe = './REPE_OUT/sdnd109b_filtre_%04d.dat' % (int(pas2*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL12, LIST_PARA=XInstant,),
        _F(FONCTION=FORC_2, LIST_PARA=XInstant,),
        _F(FONCTION=PCUM_2, LIST_PARA=XInstant,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
DETRUIRE(INFO=1, CONCEPT=( _F(NOM=unite,), ),)

fic_courbe = './REPE_OUT/sdnd109b_%04d.dat' % (int(pas1*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL11,),
        _F(FONCTION=FORC_1,),
        _F(FONCTION=PCUM_1,),
        _F(FONCTION=VITE_1,),
        _F(FONCTION=UXAN_1,),
        _F(FONCTION=DEPL31,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
DETRUIRE(INFO=1, CONCEPT=( _F(NOM=unite,), ),)
#
fic_courbe = './REPE_OUT/sdnd109b_%04d.dat' % (int(pas2*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL12,),
        _F(FONCTION=FORC_2,),
        _F(FONCTION=PCUM_2,),
        _F(FONCTION=VITE_2,),
        _F(FONCTION=UXAN_2,),
        _F(FONCTION=DEPL32,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
DETRUIRE(INFO=1, CONCEPT=( _F(NOM=unite,), ),)
"""
FIN()
