# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2018 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#       LOI DIS_GRICRA POUR DES ELEMENTS DISCRETS
# ======================================================================
# UTILISATION : ASSEMBLAGE COMBUSTIBLE, TEST DE LA LIAISON GRILLE-CRAYON
#               COMPORTEMENT EN ROTATION AVEC DEPENDANCE VIS-A-VIS
#               DE LA TEMPERATURE ET DE L'IRRADIATION

POURSUITE(CODE='OUI',DEBUG=_F(SDVERI='OUI'))


CHMATG=AFFE_MATERIAU(MAILLAGE=MA,
                     AFFE_VARC=(_F( NOM_VARC='IRRA',
                                TOUT='OUI',
                                EVOL=CHIRRA,
                                PROL_DROITE='CONSTANT'),
                               _F( NOM_VARC='TEMP',
                                TOUT='OUI',
                                EVOL=CHTEMP,
                                PROL_DROITE='CONSTANT',
                                VALE_REF=0.,
                                )),
                     AFFE=_F(  GROUP_MA = ('LI1'), MATER = MAT_G),
                     );

NEUT_VI = CREA_CHAMP(MODELE    = MO,
                     OPERATION = 'AFFE',
                     PROL_ZERO = 'OUI',
                     TYPE_CHAM = 'ELGA_NEUT_R',
                     AFFE = (_F(GROUP_MA = 'LI1',
                                NOM_CMP  = ('X1','X2'),
                                VALE     =  (1.0,0.)),),);


VARI_V6 = CREA_CHAMP(TYPE_CHAM = 'ELGA_VARI_R',
                     OPERATION = 'ASSE',
                     MODELE    =  MO,
                     PROL_ZERO = 'OUI',
                     ASSE      = _F( GROUP_MA     = 'LI1',
                                     CHAM_GD      =  NEUT_VI,
                                     NOM_CMP      = ('X1','X2'),
                                     NOM_CMP_RESU = ('V6','V7'),),);

RESG=STAT_NON_LINE(MODELE=MO,
                   CHAM_MATER=CHMATG,
                   CARA_ELEM=CAREG,
                   EXCIT=( _F(CHARGE = CHART, FONC_MULT = FONCT),
                           _F(CHARGE = BLOC,),),
                   ETAT_INIT = _F(VARI=VARI_V6,),
                   COMPORTEMENT=(_F(RELATION = 'ELAS',
                                 TOUT = 'OUI'  ),
                              _F(RELATION = 'DIS_GRICRA',
                                 GROUP_MA = ('LI1'),  ),
                                 ),
                   INCREMENT=_F(LIST_INST = LINST,
                                ),
                   NEWTON=_F(MATRICE = 'TANGENTE',
                             REAC_ITER=1,
                              ),
                   CONVERGENCE=_F(ITER_GLOB_MAXI=100,)
              );

RESG=CALC_CHAMP(reuse =RESG,
            RESULTAT=RESG,
            FORCE='FORC_NODA',
            GROUP_MA=('LI1'),);


TABDEP=POST_RELEVE_T(
   ACTION=_F(
      INTITULE='DEPLACEMENTS DE N2',
      NOEUD='N2',
      RESULTAT=RESG,
      NOM_CHAM='DEPL',
      NOM_CMP=('DRX'),
      OPERATION='EXTRACTION',),);

DEPN2=RECU_FONCTION(TABLE=TABDEP,
                    PARA_X='INST',
                    PARA_Y='DRX',
                    PROL_DROITE='CONSTANT',
                    PROL_GAUCHE='CONSTANT',);

TABFOR=POST_RELEVE_T(
   ACTION=_F(
      INTITULE='FORCE EN N2',
      NOEUD='N2',
      RESULTAT=RESG,
      NOM_CHAM='FORC_NODA',
      NOM_CMP=('DRX'),
      OPERATION='EXTRACTION',),);

FORN2=RECU_FONCTION(TABLE=TABFOR,
                    PARA_X='INST',
                    PARA_Y='DRX',
                    PROL_DROITE='CONSTANT',
                    PROL_GAUCHE='CONSTANT',);


TEST_RESU(RESU=(_F(INST=0.050000000000000003,
                   RESULTAT=RESG,
                   NOM_CHAM='DEPL',
                   NOEUD='N2',
                   NOM_CMP='DRX',
                   VALE_CALC=0.0005,
                   TOLE_MACHINE=1.E-3,
                   ),
                _F(INST=0.050000000000000003,
                   RESULTAT=RESG,
                   NOM_CHAM='FORC_NODA',
                   NOEUD='N2',
                   NOM_CMP='DRX',
                   VALE_CALC=0.5,
                   TOLE_MACHINE=1.E-3,
                   ),
                _F(INST=0.14999999999999999,
                   RESULTAT=RESG,
                   NOM_CHAM='DEPL',
                   NOEUD='N2',
                   NOM_CMP='DRX',
                   VALE_CALC=0.0015,
                   TOLE_MACHINE=1.E-3,
                   ),
                _F(INST=0.14999999999999999,
                   RESULTAT=RESG,
                   NOM_CHAM='FORC_NODA',
                   NOEUD='N2',
                   NOM_CMP='DRX',
                   VALE_CALC=0.7500000375,
                   TOLE_MACHINE=1.E-3,
                   ),
                _F(INST=1.0,
                   RESULTAT=RESG,
                   NOM_CHAM='DEPL',
                   NOEUD='N2',
                   NOM_CMP='DRX',
                   VALE_CALC=0.01,
                   TOLE_MACHINE=1.E-3,
                   ),
                _F(INST=1.0,
                   RESULTAT=RESG,
                   NOM_CHAM='FORC_NODA',
                   NOEUD='N2',
                   NOM_CMP='DRX',
                   VALE_CALC=0.896500675,
                   TOLE_MACHINE=1.E-3,
                   ),
                ),
          )

FIN()
