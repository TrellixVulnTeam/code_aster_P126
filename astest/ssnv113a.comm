# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2018 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# person_in_charge: mickael.abbas at edf.fr
#

DEBUT(CODE=_F(NIV_PUB_WEB='INTRANET'), DEBUG=_F(SDVERI='OUI'),)

#......................................................................
# PLAQUE CARREE EN TRACTION CISAILLEMENT CALCUL 3D
# LOI DE FLUAGE SOUS IRRADIATION DES TUBES GUIDES
#......................................................................


M=LIRE_MAILLAGE(FORMAT="ASTER",)

MO=AFFE_MODELE(
            MAILLAGE=M,
           AFFE=_F( TOUT = 'OUI',PHENOMENE = 'MECANIQUE',MODELISATION = '3D')
           )

TEMPE=CREA_CHAMP( OPERATION='AFFE', TYPE_CHAM='NOEU_TEMP_R', MAILLAGE=M,
                          AFFE=_F(  TOUT = 'OUI', NOM_CMP = 'TEMP',
                                 VALE = 350.)
                       )


L_INST=DEFI_LIST_REEL(  DEBUT=0.0,INTERVALLE=(
             _F( JUSQU_A = 0.00001,    NOMBRE = 1),
             _F( JUSQU_A = 100.0,      NOMBRE = 9),
             _F( JUSQU_A = 500.0,      NOMBRE = 10))
           )

t1 = 0.00001
list_inst = [0.0, t1]
for i in range(9):
    list_inst.append(t1+(100-t1)/9*(i+1))
for i in range(10):
    list_inst.append(100+(500-100)/10*(i+1))

MULT = FORMULE(VALE='1E-4*INST',
               NOM_PARA='INST',)

CHRES=CREA_CHAMP(
    OPERATION='AFFE', TYPE_CHAM='NOEU_NEUT_F', MAILLAGE=M,
    AFFE=_F( TOUT = 'OUI', NOM_CMP = 'X1', VALE_F = MULT),
)

#-----------------------------------------------------
# CREATION DU CHAMP FLUENC1 ASSOCIE A LA LISTE LINST
#-----------------------------------------------------

CHFLU=[None]*len(list_inst)
affe=[]
for i,inst in enumerate(list_inst):

    INST0_1=CREA_CHAMP(
        OPERATION='AFFE', TYPE_CHAM='NOEU_INST_R', MAILLAGE=M,
        AFFE=_F( TOUT = 'OUI', NOM_CMP = 'INST', VALE = inst),
    )

    NEUT=CREA_CHAMP(
        OPERATION='EVAL',
        TYPE_CHAM='NOEU_NEUT_R', CHAM_F=CHRES,
        CHAM_PARA=(INST0_1,),
    )

    CHFLU[i]=CREA_CHAMP(
        OPERATION='ASSE', TYPE_CHAM='NOEU_IRRA_R', MAILLAGE=M,
        ASSE=   _F( TOUT = 'OUI', CHAM_GD =NEUT,
                    NOM_CMP = ('X1',),  NOM_CMP_RESU = ('IRRA',)),
    )


    affe.append({'CHAM_GD' : CHFLU[i],
                 'INST'    : inst,
               })

    DETRUIRE(CONCEPT=_F(NOM=(INST0_1,NEUT)))

FLUX1=CREA_RESU(
    OPERATION='AFFE', TYPE_RESU='EVOL_VARC', NOM_CHAM='IRRA',
    AFFE=affe
)

FIN()
