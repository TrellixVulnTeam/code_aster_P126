# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2020 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------
#
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='NON'))
# SDVERI='NON' car la verification est trop couteuse en CPU
import numpy as NU

mail=LIRE_MAILLAGE(UNITE=20,FORMAT='ASTER')

modele=AFFE_MODELE(MAILLAGE=mail,
    AFFE=_F(GROUP_MA=('GAC','RESSORT'), PHENOMENE='MECANIQUE', MODELISATION='DIS_T'),
)

Pesanteur = 10.0
Raidxyz   = 2.0
Masse     = 15.0
#
Kress     = 500.0
Tfin      = 10.0
#
carael=AFFE_CARA_ELEM(
    MODELE=modele,
    DISCRET=(
        _F(GROUP_MA = 'RESSORT', REPERE='LOCAL',
           CARA     = 'K_T_D_L', VALE = (Kress, Kress, Kress,),),
        _F(GROUP_MA = 'RESSORT', CARA = 'M_T_D_L',  VALE = (0.0,),),
        _F(GROUP_MA = 'RESSORT', CARA = 'A_T_D_L',  VALE = (0.0, 0.0, 0.0), ),

        _F(GROUP_MA = 'GAC',     REPERE='LOCAL',
           CARA     = 'K_T_D_L', VALE = (Raidxyz, Raidxyz, Raidxyz,),),
        _F(GROUP_MA = 'GAC', CARA = 'M_T_D_L',  VALE = (Masse,),),
        _F(GROUP_MA = 'GAC', CARA = 'A_T_D_L',  VALE = (0.0, 0.0, 0.0), ),
   ),
)
charge=AFFE_CHAR_MECA(MODELE=modele,
    PESANTEUR=_F(GROUP_MA = 'GAC',GRAVITE=Pesanteur,DIRECTION=(1.0,0.0,0.0),),
    DDL_IMPO=(
        _F(GROUP_NO='PT2', DX=0.0, DY=0.0, DZ=0.0,),
        _F(GROUP_NO='PT3', DY=0.0, DZ=0.0,),
    ),
)
FDeplT = FORMULE(
    VALE='0.25*sin(2.0*pi*INST)+0.10*sin(2.0*pi*1.5*INST)+0.10*sin(2.0*pi*3.0*INST)',
    NOM_PARA='INST',
)
pas = 1.0/(4.0*10.0)
lsignal= DEFI_LIST_REEL(DEBUT=0.0,
    INTERVALLE=(
        _F(JUSQU_A = Tfin, PAS   = pas),
    ),
)
DeplT  = CALC_FONC_INTERP(
    FONCTION=FDeplT, LIST_PARA=lsignal,
    NOM_PARA='INST',PROL_GAUCHE='CONSTANT',
    PROL_DROITE='CONSTANT', INTERPOL='LIN',
)
CLdepl=AFFE_CHAR_MECA_F(MODELE=modele,
    DDL_IMPO=(
        _F(GROUP_NO='PT3', DX=DeplT,),
    ),
)
#
ldepla = NU.array( [0.00, 2.00, 5.00, 7.000, 9.500, 13.000, 16.000, 200.000,] )/10.0
lforce = NU.array( [4.00, 4.00, 4.50, 4.000, 3.750,  3.500,  3.000,   3.000,] )*100.0
# Raideur constante
lraide = NU.array( [2.00, 2.00, 2.00, 2.000, 2.000,  2.000,  2.000,   2.000,] )*1000.0
# Amortissement nul
lamort = NU.array( [1.00, 1.00, 1.00, 0.800, 0.800,  0.700,  0.600,   0.600,] )*0.0

fctfx=DEFI_FONCTION(NOM_PARA='DX', ABSCISSE=ldepla, ORDONNEE=lforce,)
fctrd=DEFI_FONCTION(NOM_PARA='DX', ABSCISSE=ldepla, ORDONNEE=lraide,)
fctam=DEFI_FONCTION(NOM_PARA='DX', ABSCISSE=ldepla, ORDONNEE=lamort,)

grilleac=DEFI_MATERIAU(INFO=2,
    DIS_CHOC_ENDO=_F(
        FX       = fctfx, RIGI_NOR = fctrd, AMOR_NOR = fctam,
        DIST_1   = 0.0, DIST_2   = 0.0,
        CRIT_AMOR = 'INCLUS',
    ),
)

chmat=AFFE_MATERIAU(MAILLAGE=mail,
    AFFE=_F(GROUP_MA = 'GAC',  MATER = grilleac),
)
#
# --------------------------------------------------------------------
pas1 = 0.005
l_inst1=DEFI_LIST_REEL(DEBUT=0.0,
    INTERVALLE=(
        _F(JUSQU_A = Tfin, PAS   = pas1),
    ),
)

resu1=DYNA_NON_LINE(
    MODELE      = modele,
    CHAM_MATER  = chmat,
    CARA_ELEM   = carael,
    EXCIT=(
        _F(CHARGE=charge,),
        _F(CHARGE=CLdepl,),
    ),
    COMPORTEMENT=(
        _F(GROUP_MA='GAC',RELATION='CHOC_ENDO',),
    ),
    INCREMENT=_F(LIST_INST=l_inst1,),
    SCHEMA_TEMPS=_F(SCHEMA='NEWMARK', FORMULATION='DEPLACEMENT'),
    CONVERGENCE=_F(RESI_REFE_RELA=5.0E-02, EFFORT_REFE=1.0),
    NEWTON=_F(REAC_INCR=1, MATRICE='TANGENTE', REAC_ITER=1,),
    ARCHIVAGE=_F(LIST_INST=l_inst1),
)

# --------------------------------------------------------------------
pas2 = 0.010
l_inst2=DEFI_LIST_REEL(DEBUT=0.0,
    INTERVALLE=(
        _F(JUSQU_A = Tfin, PAS   = pas2),
    ),
)

resu2=DYNA_NON_LINE(
    MODELE      = modele,
    CHAM_MATER  = chmat,
    CARA_ELEM   = carael,
    EXCIT=(
        _F(CHARGE=charge,),
        _F(CHARGE=CLdepl,),
    ),
    COMPORTEMENT=(
        _F(GROUP_MA='GAC',RELATION='CHOC_ENDO',),
    ),
    INCREMENT=_F(LIST_INST=l_inst2,),
    SCHEMA_TEMPS=_F(SCHEMA='NEWMARK', FORMULATION='DEPLACEMENT'),
    CONVERGENCE=_F(RESI_REFE_RELA=5.0E-02, EFFORT_REFE=1.0),
    NEWTON=_F(REAC_INCR=1, MATRICE='TANGENTE', REAC_ITER=1,),
    ARCHIVAGE=_F(LIST_INST=l_inst2),
)
#
DEPL11=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT1',)
FORC_1=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='SIEF_ELGA', NOM_CMP='N', MAILLE='M1',POINT=1)
PCUM_1=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='VARI_ELGA', NOM_CMP='V1',MAILLE='M1',POINT=1)
#
DEPL12=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT1',)
FORC_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='SIEF_ELGA', NOM_CMP='N', MAILLE='M1',POINT=1)
PCUM_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V1',MAILLE='M1',POINT=1)
#
# INST             DEPL              FORC              PCUM
Resultat1 = [
 1.1000000000E-01, 8.6804086791E-02, 0.0000000000E+00, 0.0000000000E+00,
 1.4000000000E-01, 1.4623320513E-01,-9.2478605109E+01, 0.0000000000E+00,
 2.0000000000E-01, 2.8109617676E-01,-3.6220454837E+02, 0.0000000000E+00,
 2.1000000000E-01, 3.0093325097E-01,-4.0017057038E+02, 8.5406320348E-04,
 3.0000000000E-01, 3.8742136768E-01,-4.1455851223E+02, 8.0148208981E-02,
 3.7000000000E-01, 3.3011145621E-01,-2.9993868931E+02, 8.0148208981E-02,
 4.5000000000E-01, 1.8891923468E-01,-1.7554246239E+01, 8.0148208981E-02,
 4.6000000000E-01, 1.7104489887E-01,-6.5085354029E-03, 8.0148208981E-02,
 1.0300000000E+00, 1.6687779128E-01, 0.0000000000E+00, 8.0148208981E-02,
 1.1000000000E+00, 3.3492321556E-01,-3.0954401130E+02, 8.0148208981E-02,
 1.1800000000E+00, 4.2990164611E-01,-4.2164577360E+02, 1.1907575838E-01,
 1.2200000000E+00, 4.1087254411E-01,-3.8330625900E+02, 1.1921641369E-01,
 1.3000000000E+00, 2.6446583434E-01,-9.0492839449E+01, 1.1921641369E-01,
 1.3300000000E+00, 1.9878204410E-01, 0.0000000000E+00, 1.1921641369E-01,
 1.6800000000E+00, 2.1472072225E-01, 0.0000000000E+00, 1.1921641369E-01,
 1.7000000000E+00, 2.2822583702E-01,-1.8017673094E+01, 1.1921641369E-01,
 1.7700000000E+00, 2.5266588353E-01,-6.6897766117E+01, 1.1921641369E-01,
 1.8600000000E+00, 2.1010493293E-01, 0.0000000000E+00, 1.1921641369E-01,
 2.2300000000E+00, 2.1302580779E-01,-7.7739440823E-11, 1.1921641369E-01,
 2.2400000000E+00, 2.4098621851E-01,-4.3541046324E+01, 1.1921641369E-01,
 2.3900000000E+00, 5.1196589391E-01,-4.3517594577E+02, 1.9437863936E-01,
 2.5100000000E+00, 3.1329034728E-01,-3.7824852521E+01, 1.9437863936E-01,
 2.5200000000E+00, 2.8530777299E-01,-1.7853341651E-02, 1.9437863936E-01,
 3.1200000000E+00, 2.7603826595E-01,-1.7853341723E-02, 1.9437863936E-01,
 3.1400000000E+00, 3.6581764812E-01,-1.4290427642E+02, 1.9437863936E-01,
 3.1500000000E+00, 4.1004441256E-01,-2.3135780531E+02, 1.9437863936E-01,
 3.1600000000E+00, 4.5281158630E-01,-3.1689215279E+02, 1.9437863936E-01,
 3.1700000000E+00, 4.9337354156E-01,-3.9801606330E+02, 1.9437863936E-01,
 3.1800000000E+00, 5.3103602070E-01,-4.3853275809E+02, 2.1178277110E-01,
 3.1900000000E+00, 5.6536345690E-01,-4.4425399746E+02, 2.4324958762E-01,
 3.2000000000E+00, 5.9615759997E-01,-4.4938635464E+02, 2.7147755210E-01,
 3.3800000000E+00, 5.3763560359E-01,-8.6881452275E+01, 3.9420800690E-01,
 3.4000000000E+00, 4.8543145871E-01,-2.2975981064E-02, 3.9420800690E-01,
 4.2100000000E+00, 4.5546734090E-01,-2.2975981064E-02, 3.9420800690E-01,
 4.2300000000E+00, 5.4531925357E-01,-1.0224314325E+02, 3.9420800690E-01,
 4.2700000000E+00, 7.1049649775E-01,-4.2240413010E+02, 3.9930475765E-01,
 4.4600000000E+00, 7.3563612727E-01,-8.6124131603E+01, 5.9258438643E-01,
 4.4800000000E+00, 6.7287970007E-01,-1.8539437763E-02, 5.9258438643E-01,
 5.2100000000E+00, 6.4508109838E-01,-1.8539437763E-02, 5.9258438643E-01,
 5.2300000000E+00, 7.6266659519E-01,-1.4017466973E+02, 5.9258438643E-01,
 5.2600000000E+00, 9.2009354795E-01,-3.8800496654E+02, 6.2609619078E-01,
 5.4500000000E+00, 1.0145432781E+00,-7.3120032681E+01, 8.7798838791E-01,
 5.4700000000E+00, 9.5005871391E-01,-1.5977759018E-02, 8.7798838791E-01,
 6.2800000000E+00, 9.4779843234E-01,-1.5977759444E-02, 8.7798838791E-01,
 6.3000000000E+00, 1.1033456116E+00,-2.5074310169E+02, 8.7798838791E-01,
 6.3100000000E+00, 1.1762945648E+00,-3.6601400644E+02, 8.9330188874E-01,
 6.5000000000E+00, 1.5305805751E+00,-7.3125544059E+01, 1.3940321302E+00,
 6.5100000000E+00, 1.4916690122E+00,-2.8845113639E-02, 1.3940321302E+00,
 7.3400000000E+00, 1.4351057390E+00,-2.8845113639E-02, 1.3940321302E+00,
 7.3500000000E+00, 1.5216068822E+00,-5.5170557295E+01, 1.3940321302E+00,
 7.3600000000E+00, 1.6044021828E+00,-2.2076115854E+02, 1.3940321302E+00,
 7.3700000000E+00, 1.6822973712E+00,-3.0297171681E+02, 1.4308220395E+00,
 7.4900000000E+00, 2.1205806654E+00,-2.9558322596E+02, 1.8727995791E+00,
 7.5400000000E+00, 1.9986408571E+00,-5.1703609250E+01, 1.8727995791E+00,
 7.5500000000E+00, 1.9541232692E+00,-1.7174243603E-02, 1.8727995791E+00,
 8.3900000000E+00, 1.8981562963E+00,-1.7174243603E-02, 1.8727995791E+00,
 8.4000000000E+00, 2.0203461446E+00,-9.5112880413E+01, 1.8727995791E+00,
 8.4100000000E+00, 2.1366916210E+00,-3.0003606237E+02, 1.8866834646E+00,
 8.5300000000E+00, 2.8369314713E+00,-2.9941330947E+02, 2.5872346914E+00,
 8.5700000000E+00, 2.7362761295E+00,-9.8102625836E+01, 2.5872346914E+00,
 8.5800000000E+00, 2.6855491105E+00,-1.5589909480E-02, 2.5872346914E+00,
 9.4700000000E+00, 2.6661614690E+00,-1.5589909480E-02, 2.5872346914E+00,
 9.4800000000E+00, 2.7820586453E+00,-1.8967737122E+02, 2.5872346914E+00,
 9.4900000000E+00, 2.8890128500E+00,-3.0004858800E+02, 2.6390032876E+00,
 9.5800000000E+00, 3.3493773102E+00,-2.9977903182E+02, 3.0995025260E+00,
 9.5900000000E+00, 3.3396371971E+00,-2.8029880562E+02, 3.0995025260E+00,
 9.6000000000E+00, 3.3173744189E+00,-2.3577324910E+02, 3.0995025260E+00,
 9.6100000000E+00, 3.2829019167E+00,-1.6682824472E+02, 3.0995025260E+00,
 9.6200000000E+00, 3.2367532487E+00,-7.4530908667E+01, 3.0995025260E+00,
]
Instant = Resultat1[0::4]
Deplace = Resultat1[1::4]
Force   = Resultat1[2::4]
Pcumul  = Resultat1[3::4]
motclef = {}; motclef['VALEUR'] = []
for ii in range(len(Instant)):
    # Pour Force
    if ( abs(Force[ii]) > 1.0 ):
        motclef['VALEUR'].append( _F(FONCTION=FORC_1,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Force[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=FORC_1,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Force[ii], CRITERE= 'ABSOLU',),)
    # Pour Pcumul
    if ( abs(Pcumul[ii]) > 0.001 ):
        motclef['VALEUR'].append( _F(FONCTION=PCUM_1,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Pcumul[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=PCUM_1,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Pcumul[ii], CRITERE= 'ABSOLU',),)
    # Pour Deplace
    if ( abs(Deplace[ii]) > 0.001 ):
        motclef['VALEUR'].append( _F(FONCTION=DEPL11,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Deplace[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=DEPL11,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Deplace[ii], CRITERE= 'ABSOLU',),)
TEST_FONCTION(**motclef)
#
# INST             DEPL              FORC              PCUM
Resultat2 = [
 1.1000000000E-01, 8.6799114482E-02,-1.3895122385E-14, 0.0000000000E+00,
 1.4000000000E-01, 1.4609621068E-01,-9.2188349155E+01, 0.0000000000E+00,
 2.0000000000E-01, 2.8067943323E-01,-3.6135479426E+02, 0.0000000000E+00,
 2.1000000000E-01, 3.0049537840E-01,-4.0011725101E+02, 4.3471678692E-04,
 3.0000000000E-01, 3.8711165937E-01,-4.1455329784E+02, 7.9832974344E-02,
 3.7000000000E-01, 3.3010646140E-01,-3.0054290190E+02, 7.9832974344E-02,
 4.5000000000E-01, 1.8911013882E-01,-1.8550256742E+01, 7.9832974344E-02,
 4.6000000000E-01, 1.7120355848E-01,-1.5793210536E-02, 7.9832974344E-02,
 1.0300000000E+00, 1.6678437980E-01,-1.5793210536E-02, 7.9832974344E-02,
 1.1000000000E+00, 3.3471728814E-01,-3.0979157523E+02, 7.9832974344E-02,
 1.1800000000E+00, 4.2967581272E-01,-4.2164084063E+02, 1.1886686621E-01,
 1.2200000000E+00, 4.1074059179E-01,-3.8377039879E+02, 1.1886686621E-01,
 1.3000000000E+00, 2.6463978216E-01,-9.1568779527E+01, 1.1886686621E-01,
 1.3300000000E+00, 1.9898329524E-01,-3.7624660804E-02, 1.1886686621E-01,
 1.6800000000E+00, 2.1393079958E-01,-3.7624660804E-02, 1.1886686621E-01,
 1.7000000000E+00, 2.2744364526E-01,-1.7192460394E+01, 1.1886686621E-01,
 1.7700000000E+00, 2.5214885032E-01,-6.6602870502E+01, 1.1886686621E-01,
 1.8600000000E+00, 2.1025630586E-01,-4.7206352601E-02, 1.1886686621E-01,
 2.2300000000E+00, 2.1387475564E-01,-4.7206352618E-02, 1.1886686621E-01,
 2.2400000000E+00, 2.4172441896E-01,-4.5772477932E+01, 1.1886686621E-01,
 2.3900000000E+00, 5.1049955636E-01,-4.3514446642E+02, 1.9295600937E-01,
 2.5100000000E+00, 3.1153613860E-01,-3.7217630894E+01, 1.9295600937E-01,
 2.5200000000E+00, 2.8359939455E-01,-5.1696594179E-02, 1.9295600937E-01,
 3.1200000000E+00, 2.7693582623E-01,-5.1696594309E-02, 1.9295600937E-01,
 3.1400000000E+00, 3.6637187989E-01,-1.4688865296E+02, 1.9295600937E-01,
 3.1500000000E+00, 4.1036405312E-01,-2.3487299941E+02, 1.9295600937E-01,
 3.1600000000E+00, 4.5287457066E-01,-3.1989403451E+02, 1.9295600937E-01,
 3.1700000000E+00, 4.9316412957E-01,-4.0047315232E+02, 1.9295600937E-01,
 3.1800000000E+00, 5.3058991905E-01,-4.3848948528E+02, 2.1137363237E-01,
 3.1900000000E+00, 5.6472337096E-01,-4.4417839393E+02, 2.4266262995E-01,
 3.2000000000E+00, 5.9532812489E-01,-4.4927918625E+02, 2.7071698772E-01,
 3.3800000000E+00, 5.3458229029E-01,-8.6493725607E+01, 3.9136388344E-01,
 3.4000000000E+00, 4.8231528250E-01,-5.4368133339E-02, 3.9136388344E-01,
 4.2100000000E+00, 4.5665249618E-01,-9.0525086410E-11, 3.9136388344E-01,
 4.2300000000E+00, 5.4597277785E-01,-1.0921765715E+02, 3.9136388344E-01,
 4.2700000000E+00, 7.0955416918E-01,-4.2262831583E+02, 3.9823994543E-01,
 4.4600000000E+00, 7.2946998013E-01,-8.3534445925E+01, 5.8770269134E-01,
 4.4800000000E+00, 6.6673065933E-01,-3.2995176716E-04, 5.8770269134E-01,
 5.2100000000E+00, 6.4730309611E-01,-3.2995201622E-04, 5.8770269134E-01,
 5.2300000000E+00, 7.6400458210E-01,-1.5261113175E+02, 5.8770269134E-01,
 5.2600000000E+00, 9.1954683814E-01,-3.8805873969E+02, 6.2552114341E-01,
 5.4500000000E+00, 1.0055427756E+00,-6.8439377412E+01, 8.7132676203E-01,
 5.4700000000E+00, 9.4103682670E-01,-8.0324172074E-03, 8.7132676203E-01,
 6.2800000000E+00, 9.4695360930E-01,-8.0324181754E-03, 8.7132676203E-01,
 6.3000000000E+00, 1.1011016528E+00,-2.5956190146E+02, 8.7132676203E-01,
 6.3100000000E+00, 1.1733003876E+00,-3.6621676676E+02, 8.9019806418E-01,
 6.5000000000E+00, 1.5181674391E+00,-7.1154301970E+01, 1.3825963481E+00,
 6.5100000000E+00, 1.4791435783E+00,-2.3307686509E-02, 1.3825963481E+00,
 7.3400000000E+00, 1.4346585268E+00,-2.3307687354E-02, 1.3825963481E+00,
 7.3500000000E+00, 1.5203664552E+00,-7.5574601345E+01, 1.3825963481E+00,
 7.3600000000E+00, 1.6021844471E+00,-2.3921058500E+02, 1.3825963481E+00,
 7.3700000000E+00, 1.6791154593E+00,-3.0353351301E+02, 1.4273658964E+00,
 7.4900000000E+00, 2.1082327505E+00,-2.9445559672E+02, 1.8610221457E+00,
 7.5400000000E+00, 1.9845071617E+00,-4.7004419001E+01, 1.8610221457E+00,
 7.5500000000E+00, 1.9398379894E+00,-2.8980585340E-02, 1.8610221457E+00,
 8.3900000000E+00, 1.8969417662E+00,-2.8980586883E-02, 1.8610221457E+00,
 8.4000000000E+00, 2.0181684541E+00,-1.1432090710E+02, 1.8610221457E+00,
 8.4100000000E+00, 2.1333957569E+00,-3.0003507221E+02, 1.8833923660E+00,
 8.5300000000E+00, 2.8231709534E+00,-3.0003507221E+02, 2.5731675625E+00,
 8.5700000000E+00, 2.7206213015E+00,-9.4935768381E+01, 2.5731675625E+00,
 8.5800000000E+00, 2.6696343654E+00,-2.3137016714E-02, 2.5731675625E+00,
 9.4700000000E+00, 2.6617478634E+00,-2.3137019986E-02, 2.5731675625E+00,
 9.4800000000E+00, 2.7766562088E+00,-2.0699397604E+02, 2.5731675625E+00,
 9.4900000000E+00, 2.8826751018E+00,-3.0001724009E+02, 2.6326748235E+00,
 9.5800000000E+00, 3.3370642603E+00,-3.0001724009E+02, 3.0870639820E+00,
 9.5900000000E+00, 3.3268854295E+00,-2.7965957841E+02, 3.0870639820E+00,
 9.6000000000E+00, 3.3042563614E+00,-2.3440144223E+02, 3.0870639820E+00,
 9.6100000000E+00, 3.2694972049E+00,-1.6488312933E+02, 3.0870639820E+00,
 9.6200000000E+00, 3.2231434202E+00,-7.2175559846E+01, 3.0870639820E+00,
]
Instant = Resultat2[0::4]
Deplace = Resultat2[1::4]
Force   = Resultat2[2::4]
Pcumul  = Resultat2[3::4]
motclef = {}; motclef['VALEUR'] = []
for ii in range(len(Instant)):
    # Pour Force
    if ( abs(Force[ii]) > 1.0 ):
        motclef['VALEUR'].append( _F(FONCTION=FORC_2,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Force[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=FORC_2,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Force[ii], CRITERE= 'ABSOLU',),)
    # Pour Pcumul
    if ( abs(Pcumul[ii]) > 0.001 ):
        motclef['VALEUR'].append( _F(FONCTION=PCUM_2,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Pcumul[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=PCUM_2,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Pcumul[ii], CRITERE= 'ABSOLU',),)
    # Pour Deplace
    if ( abs(Deplace[ii]) > 0.001):
        motclef['VALEUR'].append( _F(FONCTION=DEPL12,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Deplace[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=DEPL12,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Deplace[ii], CRITERE= 'ABSOLU',),)
TEST_FONCTION(**motclef)
"""
# Pour l'impression des courbes
XInstant=DEFI_LIST_REEL(VALE=Instant)
# LIST_PARA=XInstant,
#
UXAN_1=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='VARI_ELGA', NOM_CMP='V2',MAILLE='M1',POINT=1)
DEPL31=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT3',)
VITE_1=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V3',MAILLE='M1',POINT=1)
#
UXAN_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V2',MAILLE='M1',POINT=1)
DEPL32=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT3',)
VITE_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V3',MAILLE='M1',POINT=1)
#
fic_courbe = './REPE_OUT/sdnd109a_filtre_%04d.dat' % (int(pas1*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL11, LIST_PARA=XInstant,),
        _F(FONCTION=FORC_1, LIST_PARA=XInstant,),
        _F(FONCTION=PCUM_1, LIST_PARA=XInstant,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
#
fic_courbe = './REPE_OUT/sdnd109a_filtre_%04d.dat' % (int(pas2*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL12, LIST_PARA=XInstant,),
        _F(FONCTION=FORC_2, LIST_PARA=XInstant,),
        _F(FONCTION=PCUM_2, LIST_PARA=XInstant,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)

fic_courbe = './REPE_OUT/sdnd109a_%04d.dat' % (int(pas1*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL11,),
        _F(FONCTION=FORC_1,),
        _F(FONCTION=PCUM_1,),
        _F(FONCTION=VITE_1,),
        _F(FONCTION=UXAN_1,),
        _F(FONCTION=DEPL31,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
#
fic_courbe = './REPE_OUT/sdnd109a_%04d.dat' % (int(pas2*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL12,),
        _F(FONCTION=FORC_2,),
        _F(FONCTION=PCUM_2,),
        _F(FONCTION=VITE_2,),
        _F(FONCTION=UXAN_2,),
        _F(FONCTION=DEPL32,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
"""
FIN()
