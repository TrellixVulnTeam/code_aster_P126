# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2020 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# UTILISATION : COMPARAISON DE LA SIMULATION NUMERIQUE D'UN ASSEMBLAGE
#               COMBUSTIBLE EN FLEXION AVEC LES RESULTATS EXPERIMENTAUX

DEBUT(CODE=_F(NIV_PUB_WEB='INTRANET'), IMPR_MACRO='NON', )
import numpy as np

tabn = LIRE_TABLE(UNITE      = 38,
                  FORMAT     = 'LIBRE',
                  SEPARATEUR = '\t')

MA1 = LIRE_MAILLAGE(FORMAT = 'MED',
                    UNITE = 20)

FLEX = CALC_MAC3COEUR(TYPE_COEUR  = 'MONO_FROID',
                      TABLE_N     =  tabn,
                      MAILLAGE_N  =  MA1,
                      TYPE_DEFORMATION = 'PETIT',
                      DEFORMATION = _F(UNITE_THYC   = 32,
                                       NIVE_FLUENCE = 0.,
                                       TYPE_MAINTIEN = 'FORCE',
                                       FORCE_MAINTIEN =5610.,
                                       ARCHIMEDE      = 'NON',
                                       ))

FLEX = CALC_CHAMP(reuse = FLEX,
                  RESULTAT = FLEX,
                  PRECISION=1e-08,
                  FORCE = ('FORC_NODA',),)

FLEX_CH = LIRE_FONCTION(UNITE = 21,
                        NOM_PARA = 'DX',
                        PROL_DROITE = 'CONSTANT',
                        PROL_GAUCHE = 'CONSTANT',)

FLEX_DCH = LIRE_FONCTION(UNITE=22,
                         NOM_PARA='DX',
                         PROL_DROITE='CONSTANT',
                         PROL_GAUCHE = 'CONSTANT',)

POST1 = POST_RELEVE_T(ACTION = _F(OPERATION = 'EXTRACTION',
                                  INTITULE = 'DY',
                                  RESULTAT  = FLEX,
                                  PRECISION=1e-08,
                                  NOM_CHAM  = 'DEPL',
                                  GROUP_NO = 'P_A_A_5',
                                  NOM_CMP = 'DY',))

POST2 = POST_RELEVE_T(ACTION = _F(OPERATION = 'EXTRACTION',
                                  INTITULE = 'FORCES',
                                  RESULTAT = FLEX,
                                  PRECISION=1e-08,
                                  NOM_CHAM = 'FORC_NODA',
                                  GROUP_NO = ('GRIL_5'),
                                  RESULTANTE = ('DX','DY','DZ'),
                                  REPERE = 'GLOBAL'))



dy_exp_ch, force_exp_ch = FLEX_CH.Valeurs()
dy_exp_dch, force_exp_dch = FLEX_DCH.Valeurs()

inst = POST1.EXTR_TABLE().INST.values()
dy_calc = np.array(POST1.EXTR_TABLE().DY.values())

force_calc = np.array(POST2.EXTR_TABLE().DY.values())

# Selection de la partie charge
idx_min_ch = 17
idx_max_ch = 38

inst_ch = inst[idx_min_ch:idx_max_ch]
dy_ch = dy_calc[idx_min_ch:idx_max_ch]
force_ch = force_calc[idx_min_ch:idx_max_ch]

# Selection de la partie decharge
idx_min_dch = 87
idx_max_dch = 108

inst_dch = inst[idx_min_dch:idx_max_dch]
dy_dch = dy_calc[idx_min_dch:idx_max_dch]
force_dch = force_calc[idx_min_dch:idx_max_dch]

# Calcul de la difference avec l'essai
dy_exp_ch_interp = np.interp(force_ch, force_exp_ch, dy_exp_ch)
diff_dy_ch = np.around(dy_ch - dy_exp_ch_interp,12)
dy_exp_dch_interp = np.interp(force_dch, force_exp_dch, dy_exp_dch)
diff_dy_dch = np.around(dy_dch - dy_exp_dch_interp,12)

TAB = CREA_TABLE(LISTE=(
    _F(PARA = 'INST',
       LISTE_R = list(inst_ch) + list(inst_dch)),
    _F(PARA = 'DY',
       LISTE_R = list(dy_ch) + list(dy_dch)),
    _F(PARA = 'FY',
       LISTE_R = list(force_ch) + list(force_dch)),
    _F(PARA = 'DY_EXP',
       LISTE_R = list(dy_exp_ch_interp) + list(dy_exp_dch_interp)),
    _F(PARA = 'DELTA_DY',
       LISTE_R = list(diff_dy_ch) + list(diff_dy_dch)),
))

DEPLF = RECU_FONCTION(TABLE=TAB,
                      PARA_X='INST',
                      PARA_Y='DY',
                      PROL_DROITE='CONSTANT',
                      PROL_GAUCHE='CONSTANT',)

FORCF = RECU_FONCTION(TABLE=TAB,
                      PARA_X='INST',
                      PARA_Y='FY',
                      PROL_DROITE='CONSTANT',
                      PROL_GAUCHE='CONSTANT',)

IMPR_FONCTION(FORMAT='XMGRACE',UNITE=29,
              COURBE=(_F(FONCTION=FLEX_CH ,LEGENDE='Essai de flexion : Charge'  ,MARQUEUR =   0,COULEUR =    2,STYLE = 1,),
                      _F(FONCTION=FLEX_DCH,LEGENDE='Essai de flexion : Decharge',MARQUEUR =   0,COULEUR =    2,STYLE = 1,),
                      _F(FONC_X=DEPLF,FONC_Y=FORCF,LEGENDE='Calcul',MARQUEUR =   0,COULEUR =    4,STYLE = 1,),
                      ),
              BORNE_X=(0.,0.04),BORNE_Y=(0.,2500.),ECHELLE_X='LIN',ECHELLE_Y='LIN',GRILLE_X=0.004,GRILLE_Y=200.,LEGENDE_X='DY(m)',LEGENDE_Y='Effort (N)',
              TITRE='Recalage essai de flexion RFA900Z',)

TEST_TABLE(CRITERE='RELATIF', REFERENCE='SOURCE_EXTERNE', PRECISION=0.06, VALE_CALC=0.003982403817661021, VALE_REFE=0.003788396226429815, NOM_PARA='DY', TABLE=TAB, FILTRE=_F(NOM_PARA='INST', VALE=0.0026))
TEST_TABLE(CRITERE='RELATIF', REFERENCE='SOURCE_EXTERNE', PRECISION=0.05, VALE_CALC=0.005659374784284357, VALE_REFE=0.005439619047691098,  NOM_PARA='DY', TABLE=TAB, FILTRE=_F(NOM_PARA='INST', VALE=0.0028))
TEST_TABLE(CRITERE='RELATIF', REFERENCE='SOURCE_EXTERNE', PRECISION=0.06, VALE_CALC=0.0067132113643942155, VALE_REFE=0.0064546309523961145, NOM_PARA='DY', TABLE=TAB, FILTRE=_F(NOM_PARA='INST', VALE=0.0029))
TEST_TABLE(CRITERE='RELATIF', REFERENCE='SOURCE_EXTERNE', PRECISION=0.03, VALE_CALC=0.012333927298882365, VALE_REFE=0.012606964285694452, NOM_PARA='DY', TABLE=TAB, FILTRE=_F(NOM_PARA='INST', VALE=0.0033))
TEST_TABLE(CRITERE='RELATIF', REFERENCE='SOURCE_EXTERNE', PRECISION=0.02, VALE_CALC=0.02129640486818488, VALE_REFE=0.021617987805204696, NOM_PARA='DY', TABLE=TAB, FILTRE=_F(NOM_PARA='INST', VALE=0.0038))
TEST_TABLE(CRITERE='RELATIF', REFERENCE='SOURCE_EXTERNE', PRECISION=0.02, VALE_CALC=0.025070246645646357, VALE_REFE=0.0251, NOM_PARA='DY', TABLE=TAB, FILTRE=_F(NOM_PARA='INST', VALE=0.004 ))
TEST_TABLE(CRITERE='RELATIF', REFERENCE='SOURCE_EXTERNE', PRECISION=0.02, VALE_CALC=0.02370421775810864, VALE_REFE=0.024004100257069547, NOM_PARA='DY', TABLE=TAB, FILTRE=_F(NOM_PARA='INST', VALE=0.0052))
TEST_TABLE(CRITERE='RELATIF', REFERENCE='SOURCE_EXTERNE', PRECISION=0.03, VALE_CALC=0.020972159644932136, VALE_REFE=0.021601738410624276, NOM_PARA='DY', TABLE=TAB, FILTRE=_F(NOM_PARA='INST', VALE=0.0056))
TEST_TABLE(CRITERE='RELATIF', REFERENCE='SOURCE_EXTERNE', PRECISION=0.05, VALE_CALC=0.01755708700346151, VALE_REFE=0.017269512195087402, NOM_PARA='DY', TABLE=TAB, FILTRE=_F(NOM_PARA='INST', VALE=0.0061))
TEST_TABLE(CRITERE='RELATIF', REFERENCE='SOURCE_EXTERNE', PRECISION=0.09, VALE_CALC=0.016874072475167392, VALE_REFE=0.016036585365890033, NOM_PARA='DY', TABLE=TAB, FILTRE=_F(NOM_PARA='INST', VALE=0.0062))
TEST_TABLE(CRITERE='RELATIF', REFERENCE='SOURCE_EXTERNE', PRECISION=0.11, VALE_CALC=0.01494606428825538, VALE_REFE=0.01395729674792239, NOM_PARA='DY', TABLE=TAB, FILTRE=_F(NOM_PARA='INST', VALE=0.0064))
TEST_TABLE(CRITERE='RELATIF', REFERENCE='SOURCE_EXTERNE', PRECISION=0.05, VALE_CALC=0.00960357422594335, VALE_REFE=0.009925298912956158, NOM_PARA='DY', TABLE=TAB, FILTRE=_F(NOM_PARA='INST', VALE=0.0068))
TEST_TABLE(CRITERE='RELATIF', REFERENCE='SOURCE_EXTERNE', PRECISION=0.2,  VALE_CALC=0.006580952831696032, VALE_REFE=0.0077, NOM_PARA='DY', TABLE=TAB, FILTRE=_F(NOM_PARA='INST', VALE=0.007 ))

TEST_FONCTION(VALEUR=_F(CRITERE='ABSOLU', REFERENCE='SOURCE_EXTERNE', PRECISION=0.05, VALE_CALC=505.4999999838,  VALE_REFE=505.5, NOM_PARA='INST', FONCTION=FORCF, VALE_PARA=0.0026))
TEST_FONCTION(VALEUR=_F(CRITERE='ABSOLU', REFERENCE='SOURCE_EXTERNE', PRECISION=0.05, VALE_CALC=673.9999999878,  VALE_REFE=674.0, NOM_PARA='INST', FONCTION=FORCF, VALE_PARA=0.0028))
TEST_FONCTION(VALEUR=_F(CRITERE='ABSOLU', REFERENCE='SOURCE_EXTERNE', PRECISION=0.05, VALE_CALC=758.2499999575,  VALE_REFE=758.25, NOM_PARA='INST', FONCTION=FORCF, VALE_PARA=0.0029))
TEST_FONCTION(VALEUR=_F(CRITERE='ABSOLU', REFERENCE='SOURCE_EXTERNE', PRECISION=0.05, VALE_CALC=1095.249999953,  VALE_REFE=1095.25, NOM_PARA='INST', FONCTION=FORCF, VALE_PARA=0.0033))
TEST_FONCTION(VALEUR=_F(CRITERE='ABSOLU', REFERENCE='SOURCE_EXTERNE', PRECISION=0.05, VALE_CALC=1516.500000083,  VALE_REFE=1516.5, NOM_PARA='INST', FONCTION=FORCF, VALE_PARA=0.0038))
TEST_FONCTION(VALEUR=_F(CRITERE='ABSOLU', REFERENCE='SOURCE_EXTERNE', PRECISION=0.05, VALE_CALC=1684.999999866,  VALE_REFE=1685.0, NOM_PARA='INST', FONCTION=FORCF, VALE_PARA=0.004 ))
TEST_FONCTION(VALEUR=_F(CRITERE='ABSOLU', REFERENCE='SOURCE_EXTERNE', PRECISION=0.05, VALE_CALC=1516.500000033  , VALE_REFE=1516.5, NOM_PARA='INST', FONCTION=FORCF, VALE_PARA=0.0052))
TEST_FONCTION(VALEUR=_F(CRITERE='ABSOLU', REFERENCE='SOURCE_EXTERNE', PRECISION=0.05, VALE_CALC=1179.499999973  , VALE_REFE=1179.5, NOM_PARA='INST', FONCTION=FORCF, VALE_PARA=0.0056))
TEST_FONCTION(VALEUR=_F(CRITERE='ABSOLU', REFERENCE='SOURCE_EXTERNE', PRECISION=0.05, VALE_CALC=758.2499999895  , VALE_REFE=758.25, NOM_PARA='INST', FONCTION=FORCF, VALE_PARA=0.0061))
TEST_FONCTION(VALEUR=_F(CRITERE='ABSOLU', REFERENCE='SOURCE_EXTERNE', PRECISION=0.05, VALE_CALC=674.0000000027  , VALE_REFE=674.0, NOM_PARA='INST', FONCTION=FORCF, VALE_PARA=0.0062))
TEST_FONCTION(VALEUR=_F(CRITERE='ABSOLU', REFERENCE='SOURCE_EXTERNE', PRECISION=0.05, VALE_CALC=505.4999998974  , VALE_REFE=505.5, NOM_PARA='INST', FONCTION=FORCF, VALE_PARA=0.0064))
TEST_FONCTION(VALEUR=_F(CRITERE='ABSOLU', REFERENCE='SOURCE_EXTERNE', PRECISION=0.05, VALE_CALC=168.5000000330  , VALE_REFE=168.5, NOM_PARA='INST', FONCTION=FORCF, VALE_PARA=0.0068))
TEST_FONCTION(VALEUR=_F(CRITERE='ABSOLU', REFERENCE='SOURCE_EXTERNE', PRECISION=0.05, VALE_CALC=-6.355191231600E-08  , VALE_REFE=-0.0, NOM_PARA='INST', FONCTION=FORCF, VALE_PARA=0.007 ))



FIN()
