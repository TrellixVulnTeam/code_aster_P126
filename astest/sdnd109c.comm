# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2020 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------
#
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='NON'))
# SDVERI='NON' car la verification est trop couteuse en CPU
import numpy as NU

mail=LIRE_MAILLAGE(UNITE=20,FORMAT='ASTER')

modele=AFFE_MODELE(MAILLAGE=mail,
    AFFE=_F(GROUP_MA=('GAC','RESSORT'), PHENOMENE='MECANIQUE', MODELISATION='DIS_T'),
)

Pesanteur = 10.0
Raidxyz   = 2.0
Masse     = 15.0
#
Kress     = 500.0
Tfin      = 10.0
#
carael=AFFE_CARA_ELEM(
    MODELE=modele,
    DISCRET=(
        _F(GROUP_MA = 'RESSORT', REPERE='LOCAL',
           CARA     = 'K_T_D_L', VALE = (Kress, Kress, Kress,),),
        _F(GROUP_MA = 'RESSORT', CARA = 'M_T_D_L',  VALE = (0.0,),),
        _F(GROUP_MA = 'RESSORT', CARA = 'A_T_D_L',  VALE = (0.0, 0.0, 0.0), ),

        _F(GROUP_MA = 'GAC',     REPERE='LOCAL',
           CARA     = 'K_T_D_L', VALE = (Raidxyz, Raidxyz, Raidxyz,),),
        _F(GROUP_MA = 'GAC', CARA = 'M_T_D_L',  VALE = (Masse,),),
        _F(GROUP_MA = 'GAC', CARA = 'A_T_D_L',  VALE = (0.0, 0.0, 0.0), ),
   ),
)
charge=AFFE_CHAR_MECA(MODELE=modele,
    PESANTEUR=_F(GROUP_MA = 'GAC',GRAVITE=Pesanteur,DIRECTION=(1.0,0.0,0.0),),
    DDL_IMPO=(
        _F(GROUP_NO='PT2', DX=0.0, DY=0.0, DZ=0.0,),
        _F(GROUP_NO='PT3', DY=0.0, DZ=0.0,),
    ),
)
FDeplT = FORMULE(
    VALE='0.25*sin(2.0*pi*INST)+0.10*sin(2.0*pi*1.5*INST)+0.10*sin(2.0*pi*3.0*INST)',
    NOM_PARA='INST',
)
pas = 1.0/(4.0*10.0)
lsignal= DEFI_LIST_REEL(DEBUT=0.0,
    INTERVALLE=(
        _F(JUSQU_A = Tfin, PAS   = pas),
    ),
)
DeplT  = CALC_FONC_INTERP(
    FONCTION=FDeplT, LIST_PARA=lsignal,
    NOM_PARA='INST',PROL_GAUCHE='CONSTANT',
    PROL_DROITE='CONSTANT', INTERPOL='LIN',
)
CLdepl=AFFE_CHAR_MECA_F(MODELE=modele,
    DDL_IMPO=(
        _F(GROUP_NO='PT3', DX=DeplT,),
    ),
)
#
ldepla = NU.array( [0.00, 2.00, 5.00, 7.000, 9.500, 13.000, 16.000, 200.000,] )/10.0
lforce = NU.array( [4.00, 4.00, 4.50, 4.000, 3.750,  3.500,  3.000,   3.000,] )*100.0
# Raideur variable
lraide = NU.array( [2.00, 2.00, 1.80, 1.400, 1.400,  1.350,  1.330,   1.330,] )*1000.0
# Amortissement
lamort = NU.array( [1.00, 1.00, 1.00, 0.800, 0.800,  0.700,  0.600,   0.600,] )*2.0

fctfx=DEFI_FONCTION(NOM_PARA='DX', ABSCISSE=ldepla, ORDONNEE=lforce,)
fctrd=DEFI_FONCTION(NOM_PARA='DX', ABSCISSE=ldepla, ORDONNEE=lraide,)
fctam=DEFI_FONCTION(NOM_PARA='DX', ABSCISSE=ldepla, ORDONNEE=lamort,)

grilleac=DEFI_MATERIAU(INFO=2,
    DIS_CHOC_ENDO=_F(
        FX       = fctfx, RIGI_NOR = fctrd, AMOR_NOR = fctam,
        DIST_1   = 0.0, DIST_2   = 0.0,
        CRIT_AMOR = 'INCLUS',
    ),
)

chmat=AFFE_MATERIAU(MAILLAGE=mail,
    AFFE=_F(GROUP_MA = 'GAC',  MATER = grilleac),
)
#
# --------------------------------------------------------------------
pas1 = 0.005
l_inst1=DEFI_LIST_REEL(DEBUT=0.0,
    INTERVALLE=(
        _F(JUSQU_A = Tfin, PAS   = pas1),
    ),
)

resu1=DYNA_NON_LINE(
    MODELE      = modele,
    CHAM_MATER  = chmat,
    CARA_ELEM   = carael,
    EXCIT=(
        _F(CHARGE=charge,),
        _F(CHARGE=CLdepl,),
    ),
    COMPORTEMENT=(
        _F(GROUP_MA='GAC',RELATION='CHOC_ENDO',),
    ),
    INCREMENT=_F(LIST_INST=l_inst1,),
    SCHEMA_TEMPS=_F(SCHEMA='NEWMARK', FORMULATION='DEPLACEMENT'),
    CONVERGENCE=_F(RESI_REFE_RELA=5.0E-02, EFFORT_REFE=1.0),
    NEWTON=_F(REAC_INCR=1, MATRICE='TANGENTE', REAC_ITER=1,),
    ARCHIVAGE=_F(LIST_INST=l_inst1),
)

# --------------------------------------------------------------------
pas2 = 0.010
l_inst2=DEFI_LIST_REEL(DEBUT=0.0,
    INTERVALLE=(
        _F(JUSQU_A = Tfin, PAS   = pas2),
    ),
)

resu2=DYNA_NON_LINE(
    MODELE      = modele,
    CHAM_MATER  = chmat,
    CARA_ELEM   = carael,
    EXCIT=(
        _F(CHARGE=charge,),
        _F(CHARGE=CLdepl,),
    ),
    COMPORTEMENT=(
        _F(GROUP_MA='GAC',RELATION='CHOC_ENDO',),
    ),
    INCREMENT=_F(LIST_INST=l_inst2,),
    SCHEMA_TEMPS=_F(SCHEMA='NEWMARK', FORMULATION='DEPLACEMENT'),
    CONVERGENCE=_F(RESI_REFE_RELA=5.0E-02, EFFORT_REFE=1.0),
    NEWTON=_F(REAC_INCR=1, MATRICE='TANGENTE', REAC_ITER=1,),
    ARCHIVAGE=_F(LIST_INST=l_inst2),
)
#
DEPL11=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT1',)
FORC_1=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='SIEF_ELGA', NOM_CMP='N', MAILLE='M1',POINT=1)
PCUM_1=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='VARI_ELGA', NOM_CMP='V1',MAILLE='M1',POINT=1)
#
DEPL12=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT1',)
FORC_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='SIEF_ELGA', NOM_CMP='N', MAILLE='M1',POINT=1)
PCUM_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V1',MAILLE='M1',POINT=1)
#
# INST             DEPL              FORC              PCUM
Resultat1 = [
 1.1000000000E-01, 8.6804086791E-02, 0.0000000000E+00, 0.0000000000E+00,
 1.4000000000E-01, 1.4622888577E-01,-9.3095792503E+01, 0.0000000000E+00,
 2.0000000000E-01, 2.8097327013E-01,-3.6233269257E+02, 0.0000000000E+00,
 2.1000000000E-01, 3.0078128687E-01,-3.9672354452E+02, 2.2706240450E-03,
 3.0000000000E-01, 3.8798512734E-01,-4.1111664718E+02, 7.4254318221E-02,
 3.7000000000E-01, 3.3199220592E-01,-3.0526914583E+02, 7.4254318221E-02,
 4.5000000000E-01, 1.8974360792E-01,-3.0040183334E+01, 7.4254318221E-02,
 4.6000000000E-01, 1.7138645224E-01,-6.6968652845E-13, 7.4254318221E-02,
 1.0300000000E+00, 1.6785146909E-01, 0.0000000000E+00, 7.4254318221E-02,
 1.1000000000E+00, 3.3747572032E-01,-3.1606019552E+02, 7.4254318221E-02,
 1.1800000000E+00, 4.3182123828E-01,-4.1728206499E+02, 1.1101582913E-01,
 1.2200000000E+00, 4.1285952187E-01,-3.8277710960E+02, 1.1108444532E-01,
 1.3000000000E+00, 2.6562711167E-01,-1.0390830557E+02, 1.1108444532E-01,
 1.3300000000E+00, 1.9843452788E-01, 0.0000000000E+00, 1.1108444532E-01,
 1.6800000000E+00, 2.0567904547E-01, 0.0000000000E+00, 1.1108444532E-01,
 1.7000000000E+00, 2.1979948711E-01,-1.6529796527E+01, 1.1108444532E-01,
 1.7700000000E+00, 2.4743259945E-01,-6.8161611951E+01, 1.1108444532E-01,
 1.8600000000E+00, 2.0878196083E-01,-2.9044298874E-01, 1.1108444532E-01,
 2.2300000000E+00, 2.1623771601E-01,-1.0177680808E+01, 1.1108444532E-01,
 2.2400000000E+00, 2.4403139616E-01,-6.3448813941E+01, 1.1108444532E-01,
 2.3900000000E+00, 5.0754826319E-01,-4.2944569071E+02, 1.7411868069E-01,
 2.5100000000E+00, 3.0660149147E-01,-6.0941273783E+01, 1.7411868069E-01,
 2.5200000000E+00, 2.7805299264E-01,-7.9612655038E+00, 1.7411868069E-01,
 3.1200000000E+00, 2.8372537345E-01,-1.8569515982E+01, 1.7411868069E-01,
 3.1400000000E+00, 3.7378822217E-01,-1.8603887898E+02, 1.7411868069E-01,
 3.1500000000E+00, 4.1767244970E-01,-2.6742042792E+02, 1.7411868069E-01,
 3.1600000000E+00, 4.5983153762E-01,-3.4545054892E+02, 1.7411868069E-01,
 3.1700000000E+00, 4.9957172057E-01,-4.1884422759E+02, 1.7411868069E-01,
 3.1800000000E+00, 5.3630027175E-01,-4.3184213810E+02, 2.0081334508E-01,
 3.1900000000E+00, 5.6970948623E-01,-4.3728563547E+02, 2.2803083196E-01,
 3.2000000000E+00, 5.9961786122E-01,-4.4096641915E+02, 2.5234363421E-01,
 3.3800000000E+00, 5.3060791594E-01,-1.4387495360E+02, 3.3775559075E-01,
 3.4000000000E+00, 4.7475529088E-01,-5.5402251567E+01, 3.3775559075E-01,
 4.2100000000E+00, 4.9816042349E-01,-9.5821718497E+01, 3.3775559075E-01,
 4.2300000000E+00, 5.8406533926E-01,-2.3171381200E+02, 3.3775559075E-01,
 4.2700000000E+00, 7.3113379624E-01,-4.0801677106E+02, 3.6222347996E-01,
 4.4600000000E+00, 6.7125598572E-01,-1.2436798424E+02, 4.8059003252E-01,
 4.4800000000E+00, 6.0202627677E-01,-2.7966337737E+01, 4.8059003252E-01,
 5.2100000000E+00, 7.2866234310E-01,-2.0665472132E+02, 4.8059003252E-01,
 5.2300000000E+00, 8.3504792376E-01,-3.5455804168E+02, 4.8059003252E-01,
 5.2600000000E+00, 9.6538764379E-01,-3.7339784123E+02, 5.9601233551E-01,
 5.4500000000E+00, 9.0282880561E-01,-6.7119381560E+01, 7.5155263498E-01,
 5.4700000000E+00, 8.2986107276E-01, 0.0000000000E+00, 7.5155263498E-01,
 6.2800000000E+00, 1.0175987529E+00,-2.3010382255E+02, 7.5155263498E-01,
 6.3000000000E+00, 1.1525393235E+00,-3.5529854662E+02, 7.9432835795E-01,
 6.3100000000E+00, 1.2134947597E+00,-3.5098943117E+02, 8.5613794527E-01,
 6.5000000000E+00, 1.3696924094E+00,-8.0009337927E+01, 1.2053237645E+00,
 6.5100000000E+00, 1.3244423913E+00,-1.9916616452E+01, 1.2053237645E+00,
 7.3400000000E+00, 1.5254777332E+00,-2.9360565317E+02, 1.2053237645E+00,
 7.3500000000E+00, 1.5980096539E+00,-3.0470003551E+02, 1.2682060199E+00,
 7.3600000000E+00, 1.6650208332E+00,-2.9364078707E+02, 1.3420144153E+00,
 7.3700000000E+00, 1.7264017314E+00,-2.8878335315E+02, 1.4061151110E+00,
 7.4900000000E+00, 1.9763528951E+00,-2.5498017830E+02, 1.6779471610E+00,
 7.5400000000E+00, 1.7985656769E+00,-2.2251334817E+01, 1.6779471610E+00,
 7.5500000000E+00, 1.7455528195E+00, 0.0000000000E+00, 1.6779471610E+00,
 8.3900000000E+00, 2.0076947492E+00,-2.8551108706E+02, 1.6920152492E+00,
 8.4000000000E+00, 2.1137451299E+00,-2.8551108706E+02, 1.7974208994E+00,
 8.4100000000E+00, 2.2124549783E+00,-2.8551108706E+02, 1.8954508292E+00,
 8.5300000000E+00, 2.7033450952E+00,-2.6520928036E+02, 2.3947366129E+00,
 8.5700000000E+00, 2.5473679396E+00,-6.2468163389E+01, 2.3947366129E+00,
 8.5800000000E+00, 2.4849776229E+00, 0.0000000000E+00, 2.3947366129E+00,
 9.4700000000E+00, 2.7589032273E+00,-2.8548701778E+02, 2.4425224639E+00,
 9.4800000000E+00, 2.8559729105E+00,-2.8548701778E+02, 2.5387205444E+00,
 9.4900000000E+00, 2.9431741953E+00,-2.8548701778E+02, 2.6250129178E+00,
 9.5800000000E+00, 3.2295251885E+00,-2.6316367578E+02, 2.9226601551E+00,
 9.5900000000E+00, 3.2022713905E+00,-2.2834219463E+02, 2.9226601551E+00,
 9.6000000000E+00, 3.1632908028E+00,-1.7788422235E+02, 2.9226601551E+00,
 9.6100000000E+00, 3.1129916877E+00,-1.1231413721E+02, 2.9226601551E+00,
 9.6200000000E+00, 3.0519381277E+00,-3.2364255544E+01, 2.9226601551E+00,
]
Instant = Resultat1[0::4]
Deplace = Resultat1[1::4]
Force   = Resultat1[2::4]
Pcumul  = Resultat1[3::4]
motclef = {}; motclef['VALEUR'] = []
for ii in range(len(Instant)):
    # Pour Force
    if ( abs(Force[ii]) > 1.0 ):
        motclef['VALEUR'].append( _F(FONCTION=FORC_1,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Force[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=FORC_1,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Force[ii], CRITERE= 'ABSOLU',),)
    # Pour Pcumul
    if ( abs(Pcumul[ii]) > 0.001 ):
        motclef['VALEUR'].append( _F(FONCTION=PCUM_1,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Pcumul[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=PCUM_1,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Pcumul[ii], CRITERE= 'ABSOLU',),)
    # Pour Deplace
    if ( abs(Deplace[ii]) > 0.001 ):
        motclef['VALEUR'].append( _F(FONCTION=DEPL11,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Deplace[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=DEPL11,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Deplace[ii], CRITERE= 'ABSOLU',),)
TEST_FONCTION(**motclef)
#
# INST             DEPL              FORC              PCUM
Resultat2 = [
 1.1000000000E-01, 8.6799114482E-02,-1.4032228873E-14, 0.0000000000E+00,
 1.4000000000E-01, 1.4609122827E-01,-9.2824469740E+01, 0.0000000000E+00,
 2.0000000000E-01, 2.8055552676E-01,-3.6150702460E+02, 0.0000000000E+00,
 2.1000000000E-01, 3.0034645000E-01,-3.9666164161E+02, 1.9023637244E-03,
 3.0000000000E-01, 3.8772260997E-01,-4.1108713580E+02, 7.4029834675E-02,
 3.7000000000E-01, 3.3206126965E-01,-3.0587232462E+02, 7.4029834675E-02,
 4.5000000000E-01, 1.9003316921E-01,-3.1056784761E+01, 7.4029834675E-02,
 4.6000000000E-01, 1.7166102332E-01,-6.8922645369E-13, 7.4029834675E-02,
 1.0300000000E+00, 1.6758046415E-01, 0.0000000000E+00, 7.4029834675E-02,
 1.1000000000E+00, 3.3713923130E-01,-3.1588729545E+02, 7.4029834675E-02,
 1.1800000000E+00, 4.3173658476E-01,-4.1728101306E+02, 1.1094941362E-01,
 1.2200000000E+00, 4.1300686160E-01,-3.8334192188E+02, 1.1094941362E-01,
 1.3000000000E+00, 2.6624214487E-01,-1.0536070396E+02, 1.1094941362E-01,
 1.3300000000E+00, 1.9907191286E-01,-1.6413537196E-12, 1.1094941362E-01,
 1.6800000000E+00, 2.0422731670E-01, 0.0000000000E+00, 1.1094941362E-01,
 1.7000000000E+00, 2.1835789755E-01,-1.4057306018E+01, 1.1094941362E-01,
 1.7700000000E+00, 2.4662833211E-01,-6.6935183434E+01, 1.1094941362E-01,
 1.8600000000E+00, 2.0952809374E-01,-2.9857841744E-01, 1.1094941362E-01,
 2.2300000000E+00, 2.1792563902E-01,-1.3680178957E+01, 1.1094941362E-01,
 2.2400000000E+00, 2.4550488951E-01,-6.6538892232E+01, 1.1094941362E-01,
 2.3900000000E+00, 5.0519501041E-01,-4.2934661392E+02, 1.7207051723E-01,
 2.5100000000E+00, 3.0340879496E-01,-5.8895077992E+01, 1.7207051723E-01,
 2.5200000000E+00, 2.7496417034E-01,-6.0568700799E+00, 1.7207051723E-01,
 3.1200000000E+00, 2.8569395730E-01,-2.6086818574E+01, 1.7207051723E-01,
 3.1400000000E+00, 3.7513696512E-01,-1.9252806924E+02, 1.7207051723E-01,
 3.1500000000E+00, 4.1863900122E-01,-2.7326104174E+02, 1.7207051723E-01,
 3.1600000000E+00, 4.6037688289E-01,-3.5056842161E+02, 1.7207051723E-01,
 3.1700000000E+00, 4.9966491823E-01,-4.2317920007E+02, 1.7207051723E-01,
 3.1800000000E+00, 5.3595189563E-01,-4.3185128177E+02, 2.0048169185E-01,
 3.1900000000E+00, 5.6892458668E-01,-4.3722323919E+02, 2.2734147895E-01,
 3.2000000000E+00, 5.9840193459E-01,-4.4137957737E+02, 2.5125746619E-01,
 3.3800000000E+00, 5.2395486220E-01,-1.3980373790E+02, 3.3421643134E-01,
 3.4000000000E+00, 4.6817288065E-01,-5.0944732973E+01, 3.3421643134E-01,
 4.2100000000E+00, 4.9665327168E-01,-9.9592241706E+01, 3.3421643134E-01,
 4.2300000000E+00, 5.8148501283E-01,-2.3450626795E+02, 3.3421643134E-01,
 4.2700000000E+00, 7.2640691360E-01,-4.0927335569E+02, 3.5833603370E-01,
 4.4600000000E+00, 6.6110182137E-01,-1.2298092166E+02, 4.7147275963E-01,
 4.4800000000E+00, 5.9210016102E-01,-2.6884884966E+01, 4.7147275963E-01,
 5.2100000000E+00, 7.3041660557E-01,-2.2180775283E+02, 4.7147275963E-01,
 5.2300000000E+00, 8.3475681681E-01,-3.6681876525E+02, 4.7147275963E-01,
 5.2600000000E+00, 9.6191454743E-01,-3.7384095358E+02, 5.9215735265E-01,
 5.4500000000E+00, 8.8618600915E-01,-6.0293296186E+01, 7.3994625762E-01,
 5.4700000000E+00, 8.1338201336E-01, 0.0000000000E+00, 7.3994625762E-01,
 6.2800000000E+00, 1.0145968486E+00,-2.4229624422E+02, 7.3994625762E-01,
 6.3000000000E+00, 1.1469383869E+00,-3.5580459678E+02, 7.8845769997E-01,
 6.3100000000E+00, 1.2066455836E+00,-3.5158435394E+02, 8.4899250606E-01,
 6.5000000000E+00, 1.3461236837E+00,-7.6583297127E+01, 1.1844900916E+00,
 6.5100000000E+00, 1.3007031398E+00,-1.6196679787E+01, 1.1844900916E+00,
 7.3400000000E+00, 1.5242069056E+00,-3.1686698206E+02, 1.1867462569E+00,
 7.3500000000E+00, 1.5948663654E+00,-3.0521328412E+02, 1.2645219531E+00,
 7.3600000000E+00, 1.6600030656E+00,-2.9446542567E+02, 1.3362521607E+00,
 7.3700000000E+00, 1.7195182080E+00,-2.8874354156E+02, 1.3990652445E+00,
 7.4900000000E+00, 1.9506013678E+00,-2.5018761850E+02, 1.6558717183E+00,
 7.5400000000E+00, 1.7691637943E+00,-1.2514378293E+01, 1.6558717183E+00,
 7.5500000000E+00, 1.7158525161E+00, 0.0000000000E+00, 1.6558717183E+00,
 8.3900000000E+00, 2.0055159154E+00,-2.8562870159E+02, 1.6896474736E+00,
 8.4000000000E+00, 2.1095167686E+00,-2.8562870159E+02, 1.7930046242E+00,
 8.4100000000E+00, 2.2061916904E+00,-2.8562870159E+02, 1.8890012760E+00,
 8.5300000000E+00, 2.6763054211E+00,-2.6201259243E+02, 2.3702992652E+00,
 8.5700000000E+00, 2.5164870413E+00,-5.4093081208E+01, 2.3702992652E+00,
 8.5800000000E+00, 2.4535080410E+00, 0.0000000000E+00, 2.3702992652E+00,
 9.4700000000E+00, 2.7521981006E+00,-2.8555643220E+02, 2.4356352074E+00,
 9.4800000000E+00, 2.8471470176E+00,-2.8555643220E+02, 2.5297147518E+00,
 9.4900000000E+00, 2.9322585464E+00,-2.8555643220E+02, 2.6139204855E+00,
 9.5800000000E+00, 3.2024535078E+00,-2.5957183810E+02, 2.8984835626E+00,
 9.5900000000E+00, 3.1738760224E+00,-2.2297408718E+02, 2.8984835626E+00,
 9.6000000000E+00, 3.1337196390E+00,-1.7093472810E+02, 2.8984835626E+00,
 9.6100000000E+00, 3.0824081842E+00,-1.0399907953E+02, 2.8984835626E+00,
 9.6200000000E+00, 3.0205155865E+00,-2.2912812509E+01, 2.8984835626E+00,
]
Instant = Resultat2[0::4]
Deplace = Resultat2[1::4]
Force   = Resultat2[2::4]
Pcumul  = Resultat2[3::4]
motclef = {}; motclef['VALEUR'] = []
for ii in range(len(Instant)):
    # Pour Force
    if ( abs(Force[ii]) > 1.0 ):
        motclef['VALEUR'].append( _F(FONCTION=FORC_2,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Force[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=FORC_2,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Force[ii], CRITERE= 'ABSOLU',),)
    # Pour Pcumul
    if ( abs(Pcumul[ii]) > 0.001 ):
        motclef['VALEUR'].append( _F(FONCTION=PCUM_2,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Pcumul[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=PCUM_2,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Pcumul[ii], CRITERE= 'ABSOLU',),)
    # Pour Deplace
    if ( abs(Deplace[ii]) > 0.001):
        motclef['VALEUR'].append( _F(FONCTION=DEPL12,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Deplace[ii],),)
    else:
        motclef['VALEUR'].append( _F(FONCTION=DEPL12,  NOM_PARA='INST', VALE_PARA=Instant[ii],
                                     VALE_CALC=Deplace[ii], CRITERE= 'ABSOLU',),)
TEST_FONCTION(**motclef)
"""
# Pour l'impression des courbes
XInstant=DEFI_LIST_REEL(VALE=Instant)
# LIST_PARA=XInstant,
#
UXAN_1=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='VARI_ELGA', NOM_CMP='V2',MAILLE='M1',POINT=1)
DEPL31=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT3',)
VITE_1=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V3',MAILLE='M1',POINT=1)
#
UXAN_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V2',MAILLE='M1',POINT=1)
DEPL32=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT3',)
VITE_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V3',MAILLE='M1',POINT=1)
#
fic_courbe = './REPE_OUT/sdnd109c_filtre_%04d.dat' % (int(pas1*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL11, LIST_PARA=XInstant,),
        _F(FONCTION=FORC_1, LIST_PARA=XInstant,),
        _F(FONCTION=PCUM_1, LIST_PARA=XInstant,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
DETRUIRE(INFO=1, CONCEPT=( _F(NOM=unite,), ),)
#
fic_courbe = './REPE_OUT/sdnd109c_filtre_%04d.dat' % (int(pas2*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL12, LIST_PARA=XInstant,),
        _F(FONCTION=FORC_2, LIST_PARA=XInstant,),
        _F(FONCTION=PCUM_2, LIST_PARA=XInstant,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
DETRUIRE(INFO=1, CONCEPT=( _F(NOM=unite,), ),)

fic_courbe = './REPE_OUT/sdnd109c_%04d.dat' % (int(pas1*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL11,),
        _F(FONCTION=FORC_1,),
        _F(FONCTION=PCUM_1,),
        _F(FONCTION=VITE_1,),
        _F(FONCTION=UXAN_1,),
        _F(FONCTION=DEPL31,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
DETRUIRE(INFO=1, CONCEPT=( _F(NOM=unite,), ),)
#
fic_courbe = './REPE_OUT/sdnd109c_%04d.dat' % (int(pas2*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL12,),
        _F(FONCTION=FORC_2,),
        _F(FONCTION=PCUM_2,),
        _F(FONCTION=VITE_2,),
        _F(FONCTION=UXAN_2,),
        _F(FONCTION=DEPL32,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
DETRUIRE(INFO=1, CONCEPT=( _F(NOM=unite,), ),)
"""
FIN()
