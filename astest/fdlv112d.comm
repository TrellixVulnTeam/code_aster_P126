# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2018 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',),DEBUG=_F(SDVERI='OUI') );
#
mail0 = LIRE_MAILLAGE(FORMAT='MED', VERI_MAIL=_F(VERIF='OUI'));
#
# Modification du maillage pour creer des mailles a un noeud pour
# placer les impedances sous la fondation du barrages.
#
mail=CREA_MAILLAGE(MAILLAGE=mail0,
                      CREA_POI1 =(
                                  _F(NOM_GROUP_MA = 'PBASE',
                                    NOEUD = 'N316'),
                                  _F(NOM_GROUP_MA = 'PFONDAT',
                                    GROUP_MA = 'SURFBAS2'),
                                 ),
                     );
#
# Modification du maillage pour creer des mailles a un noeud pour
# placer les impedances sous la fondation du barrages.
#


mail=DEFI_GROUP(reuse =mail,
                MAILLAGE=mail,
                CREA_GROUP_NO=_F(NOM='ISOLSTR',
                                 GROUP_MA=('SURFBAS2'),
                                ),
               );


#
# Orientation des elements d interface.
#
mail=MODI_MAILLAGE( reuse=mail,
                    MAILLAGE=mail,
                    ORIE_NORM_COQUE=(_F( VECT_NORM = (0., 0., 1.,),
                                         NOEUD = 'N963',
                                         GROUP_MA = 'IFLUSOL2'),
                                     _F( VECT_NORM = (1., 0., 0.,),
                                         NOEUD = 'N221',
                                         GROUP_MA = 'IFLUSTR2'),
                                     _F( VECT_NORM = (0., 0., -1.,),
                                         NOEUD = 'N316',
                                         GROUP_MA = 'SURFBAS2'),
                                     _F( VECT_NORM = (0., 0., 1.,),
                                         NOEUD = 'N1043',
                                         GROUP_MA = 'SLIBREM2'),
                                    ),
                   );
modele=AFFE_MODELE( MAILLAGE= mail,
                      AFFE=( _F(GROUP_MA=( 'STRVOU2' ),
                                PHENOMENE= 'MECANIQUE',
                                MODELISATION= '3D'),
                             _F(GROUP_MA = 'PBASE',
                                PHENOMENE = 'MECANIQUE',
                                MODELISATION = 'DIS_TR'),
                           ),
                      );
#
mat1= DEFI_MATERIAU( ELAS=_F( E= 3.6E+10,
                              RHO= 2400.,
                              NU= 0.2,
#                               AMOR_HYST = 0.1,
                            ),
                       ) ;
#
champmat = AFFE_MATERIAU( MAILLAGE= mail,
                            AFFE=_F( GROUP_MA= ('STRVOU2'),
                                   MATER= mat1 )
                           );

cara_ele=AFFE_CARA_ELEM(MODELE=modele,
                        DISCRET=(_F(GROUP_MA='PBASE',
                                    REPERE='GLOBAL',
                                    CARA='M_TR_D_N',
                                    VALE=(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,)),
                                 _F(GROUP_MA='PBASE',
                                    REPERE='GLOBAL',
                                    CARA='K_TR_D_N',
                                    VALE=(0.,0.,0.,0.,0.,0.))
                                 ),
                        );

#
#========================================
# ETAPE 1: Calul des impedances de sols
# --------
#========================================
#
#
# La structure est encastree a l interface
#-----------------------------------------

cond_lim = AFFE_CHAR_MECA( MODELE= modele,
                           DDL_IMPO=_F(
                                          #GROUP_NO=('ISOLSTR',),
                                          NOEUD = 'N316',
                                          DX= 0.,
                                          DY= 0.,
                                          DZ= 0.,
                                          DRX= 0.,
                                          DRY= 0.,
                                          DRZ= 0.,
                                      ),
                           LIAISON_SOLIDE=_F(GROUP_NO=('ISOLSTR',),)
                          );


#
#
# Calcul des matrices et vecteurs elementaires
#----------------------------------------------
rigi_ele = CALC_MATR_ELEM( MODELE= modele ,
                           OPTION= 'RIGI_MECA',
                           CHAM_MATER= champmat,
                           CHARGE= cond_lim,
                           CARA_ELEM=cara_ele,
                         );
#
mass_ele = CALC_MATR_ELEM( MODELE= modele ,
                           OPTION= 'MASS_MECA',
                           CHAM_MATER= champmat,
                           CHARGE= cond_lim,
                           CARA_ELEM=cara_ele,
                         );
#
nume_ddl = NUME_DDL( MATR_RIGI= rigi_ele );
#
# Assemblage des matrices et vecteurs
#-------------------------------------
#
MATRIGI= ASSE_MATRICE( MATR_ELEM= rigi_ele, NUME_DDL= nume_ddl );
MATMASS= ASSE_MATRICE( MATR_ELEM= mass_ele, NUME_DDL= nume_ddl );
#
# Calcul de la masse du barrage voute
#-------------------------------------
#
mass_bar=POST_ELEM( MODELE= modele ,
                    INFO= 1,
                    CHAM_MATER= champmat,
                    CARA_ELEM=cara_ele,
                    MASS_INER=_F(TOUT='OUI'),
                   );
#
# calcul des modes
#------------------
#
#
#
mode_rig=CALC_MODES(MATR_RIGI=MATRIGI,
                    VERI_MODE=_F(STOP_ERREUR='NON',
                                 ),
                    OPTION='BANDE',
                    CALC_FREQ=_F(FREQ=(0.1,10.,20.,30.,40.,),
                                 ),
                    FILTRE_MODE=_F(SEUIL=0.0003,
                                   ),
                    MATR_MASS=MATMASS,
                    NORM_MODE=_F(INFO=1,
                              NORME='TRAN_ROTA',),
                    )



#
#Calcul  du macro-element Dynamique
#-----------------------------------
#
interdy = DEFI_INTERF_DYNA (NUME_DDL= nume_ddl,
                            INTERFACE=_F(NOM= 'SOLBAR',
                                         TYPE= 'CRAIGB',
                                         NOEUD=('N316',),),
                                         #GROUP_NO=('ISOLSTR',),),
                           );
#
bamo = DEFI_BASE_MODALE ( CLASSIQUE=_F(INTERF_DYNA= interdy,
                                       NMAX_MODE= 999,
                                       MODE_MECA= mode_rig )
       );
#

mael = MACR_ELEM_DYNA (BASE_MODALE= bamo, );
#


# Table de sol en manuel pour reference :
# TABSOL = DEFI_SOL_MISS(
#    TITRE="SOL HOMOGENE",
#    MATERIAU=(
#       _F(E=3.0e11,   NU=0.16, RHO=2000., AMOR_HYST=0.10),
#       _F(E=3.0e11,   NU=0.16, RHO=2000., AMOR_HYST=0.10),
#    ),
#    COUCHE=(
#       _F(EPAIS=2.5, NUME_MATE=1, RECEPTEUR="OUI"),
#       _F(EPAIS=2.5, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
#       _F(EPAIS=4.0, NUME_MATE=1, RECEPTEUR="OUI"),
#       _F(EPAIS=4.0, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
#       _F(EPAIS=4.0, NUME_MATE=1, RECEPTEUR="OUI"),
#       _F(EPAIS=4.0, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
#       _F(EPAIS=5.0, NUME_MATE=1, RECEPTEUR="OUI"),
#       _F(EPAIS=5.0, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
#       _F(EPAIS=5.0, NUME_MATE=1, RECEPTEUR="OUI"),
#       _F(EPAIS=5.0, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
#       _F(EPAIS=5.5, NUME_MATE=1, RECEPTEUR="OUI"),
#       _F(EPAIS=5.5, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
#       _F(EPAIS=6.0, NUME_MATE=1, RECEPTEUR="OUI"),
#       _F(EPAIS=6.0, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
#       _F(EPAIS=6.5, NUME_MATE=1, RECEPTEUR="OUI"),
#       _F(EPAIS=6.5, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
#       _F(EPAIS=10., NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
#       _F(SUBSTRATUM="OUI", NUME_MATE=2,),
#    ),
#    INFO=2,
# );

TABSOL=DEFI_SOL_MISS(MATERIAU=_F(E=3.0e11,
                                  NU=0.16,
                                  RHO=2000.,
                                  AMOR_HYST=0.10,),
                     COUCHE_AUTO=_F(Z0=5.,
                                    SURF='NON',HOMOGENE='OUI',EPAIS_PHYS=87.,
                                    GROUP_NO='ISOLSTR',
                                    NOMBRE_RECEPTEUR=2,
                                    GROUP_MA_INTERF='SURFBAS2',
                                    MAILLAGE=mail,
                                   ),
                     TITRE='SOL HOMOGENE',INFO=2,);


nddlgen = NUME_DDL_GENE( BASE= bamo,
                          STOCKAGE= 'PLEIN',);

rigigen=PROJ_MATR_BASE(  BASE=bamo,  NUME_DDL_GENE=nddlgen,
                            MATR_ASSE=MATRIGI );

massgen=PROJ_MATR_BASE(  BASE=bamo,  NUME_DDL_GENE=nddlgen,
                            MATR_ASSE=MATMASS );

FIN();
