# coding=utf-8

import os.path as osp

from waflib import Configure

def options(self):
    self.load('compiler_cxx')
    self.load('boost')

def configure(self):
    self.load('compiler_cxx')
    self.check_bibcxx_depends()
    self.load('boost')
    self.check_boost() # lib='shared_ptr'... ?
    cxxpath = self.path.get_src().abspath()
    self.env.append_value('INCLUDES', cxxpath)

def build(self):
    buildenv = self.all_envs[self.variant]
    get_srcs = self.path.get_src().ant_glob

    self(
        features = 'cxx',
            name = 'asterbibcxx',
          source = get_srcs('**/*.cxx'),
             env = buildenv,
             use = self.env['all_dependencies'],
    )

###############################################################################
@Configure.conf
def check_bibcxx_depends(self):
    """check dependencies of bibc"""
    self.check_cc(uselib_store='CXX', lib='stdc++')
